{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARKO\\\\OneDrive\\\\Desktop\\\\smart-agriculture-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Thermometer, Droplet, Sprout, Search, Sun, Moon, Leaf, FlaskConical, Wheat, XCircle, Play, StopCircle, Trash2, Microscope } from 'lucide-react'; // Added Microscope icon\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from 'firebase/auth';\nimport { getDatabase, ref, onValue, set } from 'firebase/database';\n\n// Custom SVG Icons for N, P, K to mimic periodic table style\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NitrogenIcon = ({\n  className\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: className,\n  viewBox: \"0 0 100 100\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n    x: \"5\",\n    y: \"5\",\n    width: \"90\",\n    height: \"90\",\n    rx: \"10\",\n    fill: \"#2ECC71\",\n    stroke: \"#27AE60\",\n    strokeWidth: \"4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n    x: \"20\",\n    y: \"35\",\n    fontFamily: \"Arial, sans-serif\",\n    fontSize: \"20\",\n    fontWeight: \"bold\",\n    fill: \"white\",\n    children: \"7\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n    x: \"50\",\n    y: \"70\",\n    fontFamily: \"Arial, sans-serif\",\n    fontSize: \"45\",\n    fontWeight: \"bold\",\n    textAnchor: \"middle\",\n    fill: \"white\",\n    children: \"N\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n    x: \"50\",\n    y: \"90\",\n    fontFamily: \"Arial, sans-serif\",\n    fontSize: \"14\",\n    textAnchor: \"middle\",\n    fill: \"white\",\n    children: \"Nitrogen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 5\n}, this);\n_c = NitrogenIcon;\nconst PhosphorusIcon = ({\n  className\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: className,\n  viewBox: \"0 0 100 100\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n    x: \"5\",\n    y: \"5\",\n    width: \"90\",\n    height: \"90\",\n    rx: \"10\",\n    fill: \"#E67E22\",\n    stroke: \"#D35400\",\n    strokeWidth: \"4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n    x: \"20\",\n    y: \"35\",\n    fontFamily: \"Arial, sans-serif\",\n    fontSize: \"20\",\n    fontWeight: \"bold\",\n    fill: \"white\",\n    children: \"15\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n    x: \"50\",\n    y: \"70\",\n    fontFamily: \"Arial, sans-serif\",\n    fontSize: \"45\",\n    fontWeight: \"bold\",\n    textAnchor: \"middle\",\n    fill: \"white\",\n    children: \"P\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n    x: \"50\",\n    y: \"90\",\n    fontFamily: \"Arial, sans-serif\",\n    fontSize: \"14\",\n    textAnchor: \"middle\",\n    fill: \"white\",\n    children: \"Phosphorus\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 5\n}, this);\n_c2 = PhosphorusIcon;\nconst PotassiumIcon = ({\n  className\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: className,\n  viewBox: \"0 0 100 100\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n    x: \"5\",\n    y: \"5\",\n    width: \"90\",\n    height: \"90\",\n    rx: \"10\",\n    fill: \"#9B59B6\",\n    stroke: \"#8E44AD\",\n    strokeWidth: \"4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n    x: \"20\",\n    y: \"35\",\n    fontFamily: \"Arial, sans-serif\",\n    fontSize: \"20\",\n    fontWeight: \"bold\",\n    fill: \"white\",\n    children: \"19\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n    x: \"50\",\n    y: \"70\",\n    fontFamily: \"Arial, sans-serif\",\n    fontSize: \"45\",\n    fontWeight: \"bold\",\n    textAnchor: \"middle\",\n    fill: \"white\",\n    children: \"K\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n    x: \"50\",\n    y: \"90\",\n    fontFamily: \"Arial, sans-serif\",\n    fontSize: \"14\",\n    textAnchor: \"middle\",\n    fill: \"white\",\n    children: \"Potassium\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 5\n}, this);\n\n// Helper function to get the color code based on value and favorable range\n_c3 = PotassiumIcon;\nconst getColorCode = (element, value, favorable) => {\n  if (!favorable) return '';\n  let comparisonValue = value;\n  if (element === 'Temperature') {\n    const [min, max] = favorable.replace('°C', '').split('~').map(Number);\n    if (comparisonValue >= min && comparisonValue <= max) return 'bg-green-500';\n    if (comparisonValue < min) return 'bg-red-500';\n    return 'bg-yellow-500';\n  } else if (element === 'Humidity') {\n    const [min, max] = favorable.replace('%', '').split('~').map(Number);\n    if (comparisonValue >= min && comparisonValue <= max) return 'bg-green-500';\n    if (comparisonValue < min) return 'bg-red-500';\n    return 'bg-yellow-500';\n  } else if (element === 'Soil Moisture') {\n    // For Soil Moisture, parse favorable as percentage range\n    const [min, max] = favorable.replace('%', '').split('-').map(Number);\n    // Compare the *displayed* percentage value\n    const displayedValue = parseFloat((value * 0.1).toFixed(1));\n    if (displayedValue >= min && displayedValue <= max) return 'bg-green-500';\n    if (displayedValue < min) return 'bg-red-500';\n    return 'bg-yellow-500';\n  } else {\n    const [min, max] = favorable.replace('mg/Kg', '').split('~').map(Number);\n    if (comparisonValue >= min && comparisonValue <= max) return 'bg-green-500';\n    if (comparisonValue < min) return 'bg-red-500';\n    return 'bg-yellow-500';\n  }\n};\n\n// Data for sensor readings and favorable ranges (initial values, will be updated by crop selection)\nconst initialSensorData = {\n  temperature: {\n    value: 26.6,\n    unit: '°C',\n    favorable: '21°C~37°C'\n  },\n  humidity: {\n    value: 52.4,\n    unit: '%',\n    favorable: '60~80 %'\n  },\n  soilMoisture: {\n    value: 100,\n    unit: '%',\n    favorable: '70%-100%'\n  },\n  // Updated favorable for initial\n  nitrogen: {\n    value: 106,\n    unit: 'mg/kg',\n    favorable: '10~50 mg/Kg'\n  },\n  phosphorus: {\n    value: 2,\n    unit: 'mg/kg',\n    favorable: '15~73 mg/Kg'\n  },\n  potassium: {\n    value: 10,\n    unit: 'mg/kg',\n    favorable: '101-150 mg/Kg'\n  }\n};\n\n// Favorable data for different crops\nconst cropFavorableData = {\n  'Manual': {\n    temperature: '21°C~37°C',\n    humidity: '60~80 %',\n    soilMoisture: '70%-100%',\n    // Updated favorable for Manual\n    nitrogen: '10~50 mg/Kg',\n    phosphorus: '15~73 mg/Kg',\n    potassium: '101-150 mg/Kg'\n  },\n  'Wheat': {\n    temperature: '18°C~24°C',\n    humidity: '50~70 %',\n    soilMoisture: '600-900',\n    // This is still raw, assuming these are raw values from sensor\n    nitrogen: '50~100 mg/Kg',\n    phosphorus: '20~40 mg/Kg',\n    potassium: '80~120 mg/Kg'\n  },\n  'Corn': {\n    temperature: '21°C~32°C',\n    humidity: '60~85 %',\n    soilMoisture: '750-1100',\n    nitrogen: '80~150 mg/Kg',\n    phosphorus: '30~60 mg/Kg',\n    potassium: '120~200 mg/Kg'\n  },\n  'Rice': {\n    temperature: '25°C~35°C',\n    humidity: '70~90 %',\n    soilMoisture: '900-1500',\n    nitrogen: '60~120 mg/Kg',\n    phosphorus: '25~50 mg/Kg',\n    potassium: '100~180 mg/Kg'\n  },\n  'Soybean': {\n    temperature: '20°C~30°C',\n    humidity: '60~80 %',\n    soilMoisture: '650-950',\n    nitrogen: '40~80 mg/Kg',\n    phosphorus: '25~55 mg/Kg',\n    potassium: '90~160 mg/Kg'\n  },\n  'Cotton': {\n    temperature: '25°C~35°C',\n    humidity: '55~75 %',\n    soilMoisture: '700-1000',\n    nitrogen: '70~130 mg/Kg',\n    phosphorus: '20~45 mg/Kg',\n    potassium: '110~190 mg/Kg'\n  }\n};\n\n// Homepage Component\nconst HomePage = ({\n  onNavigate,\n  isDarkMode,\n  sensorData\n}) => {\n  const cardClass = `flex flex-col items-center p-4 rounded-lg shadow-lg cursor-pointer transition-all duration-300 ${isDarkMode ? 'bg-gray-800 text-white hover:bg-gray-700' : 'bg-white text-gray-800 hover:bg-gray-100'}`;\n  const iconClass = `w-16 h-16 mb-2`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `text-4xl font-bold text-center mb-8 ${isDarkMode ? 'text-white' : 'text-gray-900'}`,\n      children: [\"IOT Based \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 27\n      }, this), \" Smart Agriculture System\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardClass,\n        onClick: () => onNavigate('detail', 'Temperature'),\n        children: [/*#__PURE__*/_jsxDEV(Thermometer, {\n          className: `${iconClass} ${isDarkMode ? 'text-blue-400' : 'text-blue-600'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold\",\n          children: [\"Temperature : \", sensorData.temperature.value, \" \", sensorData.temperature.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardClass,\n        onClick: () => onNavigate('detail', 'Humidity'),\n        children: [/*#__PURE__*/_jsxDEV(Droplet, {\n          className: `${iconClass} ${isDarkMode ? 'text-blue-400' : 'text-blue-600'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold\",\n          children: [\"Humidity : \", sensorData.humidity.value, \" \", sensorData.humidity.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardClass,\n        onClick: () => onNavigate('detail', 'Soil Moisture'),\n        children: [/*#__PURE__*/_jsxDEV(Sprout, {\n          className: `${iconClass} ${isDarkMode ? 'text-blue-400' : 'text-blue-600'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold\",\n          children: [\"Soil Moisture : \", parseFloat(sensorData.soilMoisture.value * 0.1).toFixed(1), \" \", sensorData.soilMoisture.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardClass,\n        onClick: () => onNavigate('detail', 'Nitrogen'),\n        children: [/*#__PURE__*/_jsxDEV(NitrogenIcon, {\n          className: iconClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold\",\n          children: [\"Nitrogen : \", sensorData.nitrogen.value, \" \", sensorData.nitrogen.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardClass,\n        onClick: () => onNavigate('detail', 'Phosphorus'),\n        children: [/*#__PURE__*/_jsxDEV(PhosphorusIcon, {\n          className: iconClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold\",\n          children: [\"Phosphorus : \", sensorData.phosphorus.value, \" \", sensorData.phosphorus.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardClass,\n        onClick: () => onNavigate('detail', 'Potassium'),\n        children: [/*#__PURE__*/_jsxDEV(PotassiumIcon, {\n          className: iconClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold\",\n          children: [\"Potassium : \", sensorData.potassium.value, \" \", sensorData.potassium.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col md:flex-row justify-center gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onNavigate('results'),\n        className: `flex items-center px-8 py-4 rounded-full shadow-xl text-xl font-semibold transition-all duration-300 mb-4 md:mb-0\n                    ${isDarkMode ? 'bg-green-600 text-white hover:bg-green-700' : 'bg-green-500 text-white hover:bg-green-600'}`,\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          className: \"w-6 h-6 mr-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), \"Result and Suggestions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onNavigate('soilAnalysis'),\n        className: `flex items-center px-8 py-4 rounded-full shadow-xl text-xl font-semibold transition-all duration-300\n                    ${isDarkMode ? 'bg-blue-600 text-white hover:bg-blue-700' : 'bg-blue-500 text-white hover:bg-blue-600'}`,\n        children: [/*#__PURE__*/_jsxDEV(Microscope, {\n          className: \"w-6 h-6 mr-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), \"Land Soil Analysis\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n\n// DetailPage Component\n_c4 = HomePage;\nconst DetailPage = ({\n  parameter,\n  onNavigate,\n  isDarkMode\n}) => {\n  const getDetailIcon = (param, className) => {\n    switch (param) {\n      case 'Temperature':\n        return /*#__PURE__*/_jsxDEV(Thermometer, {\n          className: `${className} text-red-500`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 40\n        }, this);\n      case 'Humidity':\n        return /*#__PURE__*/_jsxDEV(Droplet, {\n          className: `${className} text-blue-500`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 37\n        }, this);\n      case 'Soil Moisture':\n        return /*#__PURE__*/_jsxDEV(Sprout, {\n          className: `${className} text-green-500`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 42\n        }, this);\n      case 'Nitrogen':\n        return /*#__PURE__*/_jsxDEV(NitrogenIcon, {\n          className: className\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 37\n        }, this);\n      case 'Phosphorus':\n        return /*#__PURE__*/_jsxDEV(PhosphorusIcon, {\n          className: className\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 39\n        }, this);\n      case 'Potassium':\n        return /*#__PURE__*/_jsxDEV(PotassiumIcon, {\n          className: className\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 38\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const parameterInfo = {\n    Temperature: {\n      description: \"Temperature is a critical factor influencing plant growth, metabolic rates, and nutrient uptake. Each crop has an optimal temperature range for healthy development. Deviations can lead to stress, reduced yields, or even plant death. Monitoring and managing temperature, especially in controlled environments like greenhouses, is essential for maximizing agricultural productivity.\"\n    },\n    Humidity: {\n      description: \"Humidity, the amount of moisture in the air, plays a vital role in plant transpiration and overall health. High humidity can encourage fungal diseases, while low humidity can lead to excessive water loss and wilting. Maintaining appropriate humidity levels helps plants efficiently absorb water and nutrients, promoting robust growth.\"\n    },\n    'Soil Moisture': {\n      description: \"Soil moisture refers to the water content in the soil, crucial for nutrient transport and plant hydration. Adequate soil moisture ensures that plants can access the water they need for photosynthesis and other physiological processes. Both over-watering (leading to root rot) and under-watering (causing drought stress) can severely impact crop health and yield.\"\n    },\n    Nitrogen: {\n      description: \"Nitrogen acts as the building block for agricultural bounty. This essential nutrient fuels plant growth, forming the backbone of chlorophyll for photosynthesis and proteins for healthy structures. Like a baker needing flour, crops with adequate nitrogen flourish, producing strong stalks, vibrant leaves, and abundant fruits or grains. However, nitrogen mismanagement can disrupt this harmony. Excess nitrogen can pollute waterways and contribute to greenhouse gas emissions. Conversely, nitrogen deficiency hinders plant growth, resulting in stunted crops and diminished yields. Therefore, farmers strive for a balanced approach, employing efficient fertilization techniques and cover crops to ensure optimal nitrogen utilization for a thriving harvest.\"\n    },\n    Phosphorus: {\n      description: \"Phosphorus is vital for energy transfer within plants, playing a key role in photosynthesis, nutrient transport, and root development. It's particularly important for flowering, fruiting, and seed production. A deficiency can lead to stunted growth and poor crop quality, while proper levels ensure vigorous plant development and strong yields.\"\n    },\n    Potassium: {\n      description: \"Potassium is essential for overall plant vigor, disease resistance, and water regulation. It helps activate enzymes, improves nutrient uptake, and strengthens plant cell walls. Adequate potassium levels contribute to better fruit quality, increased drought tolerance, and enhanced resistance to pests and diseases, leading to healthier and more productive crops.\"\n    }\n  };\n  const info = parameterInfo[parameter] || {\n    description: \"Information not available.\"\n  };\n  const detailIconClass = \"w-24 h-24 mb-4\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onNavigate('home'),\n      className: `mb-6 px-6 py-2 rounded-full font-semibold transition-all duration-300\n                ${isDarkMode ? 'bg-gray-700 text-white hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n      children: \"\\u2190 Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `text-4xl font-bold text-center mb-8 ${isDarkMode ? 'text-white' : 'text-gray-900'}`,\n      children: parameter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex flex-col items-center p-6 rounded-lg shadow-xl ${isDarkMode ? 'bg-gray-800 text-white' : 'bg-white text-gray-800'}`,\n      children: [getDetailIcon(parameter, detailIconClass), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg leading-relaxed text-center max-w-2xl\",\n        children: info.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n};\n\n// LandSoilAnalysisPage Component\n_c5 = DetailPage;\nconst LandSoilAnalysisPage = ({\n  onNavigate,\n  isDarkMode,\n  sensorData\n}) => {\n  _s();\n  const [soilAnalysisSamples, setSoilAnalysisSamples] = useState([]);\n  const [isStoringData, setIsStoringData] = useState(false);\n  const sampleCounterRef = useRef(0);\n  const intervalRef = useRef(null);\n\n  // Effect for continuous data storage\n  useEffect(() => {\n    if (isStoringData) {\n      intervalRef.current = setInterval(() => {\n        sampleCounterRef.current += 1;\n        const newSample = {\n          sampleNumber: sampleCounterRef.current,\n          timestamp: new Date().toLocaleString(),\n          temperature: sensorData.temperature.value,\n          humidity: sensorData.humidity.value,\n          soilMoisture: parseFloat(sensorData.soilMoisture.value * 0.1).toFixed(1),\n          nitrogen: sensorData.nitrogen.value,\n          phosphorus: sensorData.phosphorus.value,\n          potassium: sensorData.potassium.value,\n          unitTemperature: sensorData.temperature.unit,\n          unitHumidity: sensorData.humidity.unit,\n          unitSoilMoisture: sensorData.soilMoisture.unit,\n          unitNitrogen: sensorData.nitrogen.unit,\n          unitPhosphorus: sensorData.phosphorus.unit,\n          unitPotassium: sensorData.potassium.unit\n        };\n        setSoilAnalysisSamples(prevSamples => [...prevSamples, newSample]);\n      }, 60000); // Sample every 60 seconds (1 minute)\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    }\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isStoringData, sensorData]);\n  const handleStartStoringData = () => {\n    setIsStoringData(true);\n  };\n  const handleStopStoringData = () => {\n    setIsStoringData(false);\n  };\n  const handleClearAllSamples = () => {\n    setIsStoringData(false);\n    setSoilAnalysisSamples([]);\n    sampleCounterRef.current = 0;\n  };\n  const tableHeaderClass = `px-4 py-3 text-left text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-600'} uppercase tracking-wider`;\n  const tableCellClass = `px-4 py-3 whitespace-nowrap text-sm ${isDarkMode ? 'text-white' : 'text-gray-900'}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onNavigate('home'),\n      className: `mb-6 px-6 py-2 rounded-full font-semibold transition-all duration-300\n                ${isDarkMode ? 'bg-gray-700 text-white hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n      children: \"\\u2190 Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `text-4xl font-bold text-center mb-8 ${isDarkMode ? 'text-white' : 'text-gray-900'}`,\n      children: \"Land Soil Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-6 rounded-lg shadow-xl mb-8 ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: `text-2xl font-bold text-center mb-4 ${isDarkMode ? 'text-white' : 'text-gray-900'}`,\n        children: \"Collected Soil Samples\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap justify-center gap-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartStoringData,\n          disabled: isStoringData,\n          className: `flex items-center px-6 py-3 rounded-full font-semibold transition-all duration-300\n                        ${isStoringData ? 'bg-gray-400 cursor-not-allowed' : isDarkMode ? 'bg-green-600 text-white hover:bg-green-700' : 'bg-green-500 text-white hover:bg-green-600'}`,\n          children: [/*#__PURE__*/_jsxDEV(Play, {\n            className: \"w-5 h-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this), \" Start Storing Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStopStoringData,\n          disabled: !isStoringData,\n          className: `flex items-center px-6 py-3 rounded-full font-semibold transition-all duration-300\n                        ${!isStoringData ? 'bg-gray-400 cursor-not-allowed' : isDarkMode ? 'bg-red-600 text-white hover:bg-red-700' : 'bg-red-500 text-white hover:bg-red-600'}`,\n          children: [/*#__PURE__*/_jsxDEV(StopCircle, {\n            className: \"w-5 h-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 25\n          }, this), \" Stop Storing Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearAllSamples,\n          className: `flex items-center px-6 py-3 rounded-full font-semibold transition-all duration-300\n                        ${isDarkMode ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n          children: [/*#__PURE__*/_jsxDEV(Trash2, {\n            className: \"w-5 h-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this), \" Clear All Samples\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this), soilAnalysisSamples.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: `${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'}`,\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: tableHeaderClass,\n                children: \"Sample #\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: tableHeaderClass,\n                children: \"Timestamp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: tableHeaderClass,\n                children: [\"Temp (\", sensorData.temperature.unit, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: tableHeaderClass,\n                children: [\"Humidity (\", sensorData.humidity.unit, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: tableHeaderClass,\n                children: [\"Soil Moisture (\", sensorData.soilMoisture.unit, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: tableHeaderClass,\n                children: [\"Nitrogen (\", sensorData.nitrogen.unit, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: tableHeaderClass,\n                children: [\"Phosphorus (\", sensorData.phosphorus.unit, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: tableHeaderClass,\n                children: [\"Potassium (\", sensorData.potassium.unit, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"divide-y divide-gray-200\",\n            children: soilAnalysisSamples.map((sample, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: isDarkMode ? 'bg-gray-800' : 'bg-white',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: tableCellClass,\n                children: sample.sampleNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: tableCellClass,\n                children: sample.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: tableCellClass,\n                children: sample.temperature\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: tableCellClass,\n                children: sample.humidity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: tableCellClass,\n                children: sample.soilMoisture\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: tableCellClass,\n                children: sample.nitrogen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: tableCellClass,\n                children: sample.phosphorus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: tableCellClass,\n                children: sample.potassium\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }, this), soilAnalysisSamples.length === 0 && !isStoringData && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-center py-4 ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`,\n        children: \"No samples collected yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 21\n      }, this), isStoringData && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-center py-4 ${isDarkMode ? 'text-blue-400' : 'text-blue-600'}`,\n        children: \"Collecting samples...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 9\n  }, this);\n};\n\n// ResultPage Component (unchanged logic, only removed Land Soil Analysis section)\n_s(LandSoilAnalysisPage, \"RImHzMHrf2UFRAtACJChT1lwWGo=\");\n_c6 = LandSoilAnalysisPage;\nconst ResultPage = ({\n  onNavigate,\n  isDarkMode,\n  sensorData\n}) => {\n  _s2();\n  const [localSensorData, setLocalSensorData] = useState(sensorData);\n  const [selectedCrop, setSelectedCrop] = useState('Manual');\n  const [soilHealthSuggestion, setSoilHealthSuggestion] = useState('');\n  const [cropPrediction, setCropPrediction] = useState('');\n  const [loadingSoilHealth, setLoadingSoilHealth] = useState(false);\n  const [loadingCropPrediction, setLoadingCropPrediction] = useState(false);\n  const [manualFavorableData, setManualFavorableData] = useState({\n    temperature: '21°C~37°C',\n    humidity: '60~80 %',\n    soilMoisture: '70%-100%',\n    // Updated here\n    nitrogen: '10~50 mg/Kg',\n    phosphorus: '15~73 mg/Kg',\n    potassium: '101-150 mg/Kg'\n  });\n  useEffect(() => {\n    setLocalSensorData(prevLocalData => {\n      const updatedData = {\n        ...prevLocalData\n      };\n      for (const key in sensorData) {\n        if (updatedData[key]) {\n          updatedData[key].value = sensorData[key].value;\n        }\n      }\n      return updatedData;\n    });\n  }, [sensorData]);\n  useEffect(() => {\n    if (selectedCrop !== 'Manual') {\n      setLocalSensorData(prevData => {\n        const updatedData = {};\n        for (const key in prevData) {\n          updatedData[key] = {\n            ...prevData[key],\n            favorable: cropFavorableData[selectedCrop][key.replace(/([A-Z])/g, g => `-${g[0].toLowerCase()}`).toLowerCase().replace(/^-/, '')]\n          };\n        }\n        return updatedData;\n      });\n    } else {\n      setLocalSensorData(prevData => {\n        const updatedData = {};\n        for (const key in prevData) {\n          updatedData[key] = {\n            ...prevData[key],\n            favorable: manualFavorableData[key]\n          };\n        }\n        return updatedData;\n      });\n    }\n    setSoilHealthSuggestion('');\n    setCropPrediction('');\n  }, [selectedCrop, manualFavorableData]);\n  const handleFavorableInputChange = (key, value) => {\n    setManualFavorableData(prevData => ({\n      ...prevData,\n      [key]: value\n    }));\n  };\n  const handleCropChange = event => {\n    setSelectedCrop(event.target.value);\n  };\n  const getGeminiResponse = async (prompt, type) => {\n    if (type === 'soilHealth') setLoadingSoilHealth(true);\n    if (type === 'cropPrediction') setLoadingCropPrediction(true);\n    try {\n      let chatHistory = [];\n      chatHistory.push({\n        role: \"user\",\n        parts: [{\n          text: prompt\n        }]\n      });\n      const payload = {\n        contents: chatHistory\n      };\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        const text = result.candidates[0].content.parts[0].text;\n        if (type === 'soilHealth') setSoilHealthSuggestion(text);\n        if (type === 'cropPrediction') setCropPrediction(text);\n      } else {\n        const errorMessage = \"Failed to get suggestions. Please try again.\";\n        if (type === 'soilHealth') setSoilHealthSuggestion(errorMessage);\n        if (type === 'cropPrediction') setCropPrediction(errorMessage);\n        console.error(\"Gemini API response structure unexpected:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error calling Gemini API:\", error);\n      const errorMessage = \"Error getting suggestions. Please check your network or try again later.\";\n      if (type === 'soilHealth') setSoilHealthSuggestion(errorMessage);\n      if (type === 'cropPrediction') setCropPrediction(errorMessage);\n    } finally {\n      if (type === 'soilHealth') setLoadingSoilHealth(false);\n      if (type === 'cropPrediction') setLoadingCropPrediction(false);\n    }\n  };\n  const handleGetSoilHealthSuggestions = () => {\n    setSoilHealthSuggestion('');\n    const prompt = `Given the current soil moisture and nutrient (Nitrogen, Phosphorus, Potassium) readings:\n        Soil Moisture: ${parseFloat(localSensorData.soilMoisture.value * 0.1).toFixed(1)}${localSensorData.soilMoisture.unit} (Favorable raw range: ${localSensorData.soilMoisture.favorable})\n        Nitrogen: ${localSensorData.nitrogen.value}${localSensorData.nitrogen.unit} (Favorable: ${localSensorData.nitrogen.favorable})\n        Phosphorus: ${localSensorData.phosphorus.value}${localSensorData.phosphorus.unit} (Favorable: ${localSensorData.phosphorus.favorable})\n        Potassium: ${localSensorData.potassium.value}${localSensorData.potassium.unit} (Favorable: ${localSensorData.potassium.favorable})\n\n        Provide precise and actionable suggestions ONLY on soil moisture and nutrient management for growing ${selectedCrop === 'Manual' ? 'your selected crop' : selectedCrop}. List specific steps to improve or maintain optimal levels.`;\n    getGeminiResponse(prompt, 'soilHealth');\n  };\n  const handleGetCropPredictions = () => {\n    setCropPrediction('');\n    const prompt = `Given the following soil and environmental parameters for growing ${selectedCrop === 'Manual' ? 'user-defined crop with custom favorable conditions' : selectedCrop}:\n        Temperature: ${localSensorData.temperature.value}${localSensorData.temperature.unit} (Favorable: ${localSensorData.temperature.favorable})\n        Humidity: ${localSensorData.humidity.value}${localSensorData.humidity.unit} (Favorable: ${localSensorData.humidity.favorable})\n        Soil Moisture: ${parseFloat(localSensorData.soilMoisture.value * 0.1).toFixed(1)}${localSensorData.soilMoisture.unit} (Favorable raw range: ${localSensorData.soilMoisture.favorable})\n        Nitrogen: ${localSensorData.nitrogen.value}${localSensorData.nitrogen.unit} (Favorable: ${localSensorData.nitrogen.favorable})\n        Phosphorus: ${localSensorData.phosphorus.value}${localSensorData.phosphorus.unit} (Favorable: ${localSensorData.phosphorus.favorable})\n        Potassium: ${localSensorData.potassium.value}${localSensorData.potassium.unit} (Favorable: ${localSensorData.potassium.favorable})\n\n        Based on these parameters, list only the crops that can grow well in these conditions. Do not include explanations or suggestions for adjusting conditions. Just a comma-separated list of suitable crop names.`;\n    getGeminiResponse(prompt, 'cropPrediction');\n  };\n  const handleClearAllSuggestions = () => {\n    setSoilHealthSuggestion('');\n    setCropPrediction('');\n  };\n  const tableHeaderClass = `px-4 py-3 text-left text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-600'} uppercase tracking-wider`;\n  const tableCellClass = `px-4 py-3 whitespace-nowrap text-sm ${isDarkMode ? 'text-white' : 'text-gray-900'}`;\n  const favorableInputClass = `w-full p-2 rounded-md border ${isDarkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-gray-50 border-gray-300 text-gray-900'}`;\n  const selectClass = `block w-full md:w-1/2 lg:w-1/3 px-4 py-2 rounded-md border shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 ${isDarkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onNavigate('home'),\n      className: `mb-6 px-6 py-2 rounded-full font-semibold transition-all duration-300\n                ${isDarkMode ? 'bg-gray-700 text-white hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n      children: \"\\u2190 Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `text-4xl font-bold text-center mb-8 ${isDarkMode ? 'text-white' : 'text-gray-900'}`,\n      children: \"Result & Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-6 rounded-lg shadow-xl mb-8 ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: `text-2xl font-bold mb-4 ${isDarkMode ? 'text-white' : 'text-gray-900'}`,\n        children: \"Select Your Crop or Manual Input:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCrop,\n          onChange: handleCropChange,\n          className: selectClass,\n          children: Object.keys(cropFavorableData).map(crop => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: crop,\n            children: crop\n          }, crop, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full divide-y divide-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: `${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'}`,\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: tableHeaderClass,\n              children: \"Element\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: tableHeaderClass,\n              children: \"Present Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-4 py-3 text-left text-sm font-medium text-gray-600 uppercase tracking-wider\",\n              children: [\"Favorable for \", selectedCrop]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"divide-y divide-gray-200\",\n          children: Object.entries(localSensorData).map(([key, data]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: tableCellClass + ' font-medium capitalize',\n              children: key.replace(/([A-Z])/g, ' $1')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `${tableCellClass} ${getColorCode(key.replace(/([A-Z])/g, ' $1'), data.value, data.favorable)} rounded-md`,\n              children: [key === 'soilMoisture' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold\",\n                children: parseFloat(data.value * 0.1).toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold\",\n                children: data.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 41\n              }, this), ' ', data.unit]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: tableCellClass,\n              children: selectedCrop === 'Manual' ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: manualFavorableData[key],\n                onChange: e => handleFavorableInputChange(key, e.target.value),\n                className: favorableInputClass,\n                placeholder: \"e.g., 20~30\\xB0C or 70%-100%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 41\n              }, this) : data.favorable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 33\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `text-2xl font-bold mb-4 ${isDarkMode ? 'text-white' : 'text-gray-900'}`,\n          children: \"Color Code Meaning:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"w-8 h-8 bg-red-500 rounded-md mr-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`,\n              children: \"Less than required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"w-8 h-8 bg-green-500 rounded-md mr-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`,\n              children: \"Perfect amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"w-8 h-8 bg-yellow-500 rounded-md mr-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`,\n              children: \"Higher than required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col md:flex-row justify-center gap-4 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGetSoilHealthSuggestions,\n        disabled: loadingSoilHealth,\n        className: `flex items-center px-8 py-4 rounded-full shadow-xl text-xl font-semibold transition-all duration-300\n                    ${loadingSoilHealth ? 'bg-gray-400 cursor-not-allowed' : isDarkMode ? 'bg-blue-600 text-white hover:bg-blue-700' : 'bg-blue-500 text-white hover:bg-blue-600'}`,\n        children: [/*#__PURE__*/_jsxDEV(FlaskConical, {\n          className: \"w-6 h-6 mr-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 21\n        }, this), loadingSoilHealth ? 'Generating...' : 'Get Soil Health Suggestions']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGetCropPredictions,\n        disabled: loadingCropPrediction,\n        className: `flex items-center px-8 py-4 rounded-full shadow-xl text-xl font-semibold transition-all duration-300\n                    ${loadingCropPrediction ? 'bg-gray-400 cursor-not-allowed' : isDarkMode ? 'bg-purple-600 text-white hover:bg-purple-700' : 'bg-purple-500 text-white hover:bg-purple-600'}`,\n        children: [/*#__PURE__*/_jsxDEV(Wheat, {\n          className: \"w-6 h-6 mr-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 21\n        }, this), loadingCropPrediction ? 'Generating...' : 'Get Crop Predictions']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 13\n    }, this), (soilHealthSuggestion || cropPrediction) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearAllSuggestions,\n        className: `flex items-center px-6 py-2 rounded-full text-sm font-semibold transition-all duration-300\n                        ${isDarkMode ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n        children: [/*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"w-5 h-5 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 25\n        }, this), \"Clear All Suggestions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 17\n    }, this), (soilHealthSuggestion || cropPrediction) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-6 rounded-lg shadow-xl ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`,\n      children: [soilHealthSuggestion && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `text-2xl font-bold mb-4 ${isDarkMode ? 'text-white' : 'text-gray-900'}`,\n          children: \"Soil Health Suggestions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mt-4 p-4 rounded-md ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'} whitespace-pre-wrap mb-6`,\n          children: soilHealthSuggestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true), cropPrediction && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `text-2xl font-bold mb-4 ${isDarkMode ? 'text-white' : 'text-gray-900'}`,\n          children: \"Crop Predictions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mt-4 p-4 rounded-md ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'} whitespace-pre-wrap`,\n          children: cropPrediction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 548,\n    columnNumber: 9\n  }, this);\n};\n\n// Main App Component\n_s2(ResultPage, \"rHsbq3kMEeUQYkKHmN6pmj/3aQI=\");\n_c7 = ResultPage;\nfunction App() {\n  _s3();\n  const [currentPage, setCurrentPage] = useState('home');\n  const [selectedParameter, setSelectedParameter] = useState(null);\n  const [isDarkMode, setIsDarkMode] = useState(true); // Default to dark mode as per screenshot\n\n  // Firebase states\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n\n  // State for sensor data, lifted up to App to pass to HomePage and ResultPage\n  const [appSensorData, setAppSensorData] = useState(initialSensorData);\n\n  // Initialize Firebase and authenticate\n  useEffect(() => {\n    const appId = typeof __app_id !== 'undefined' ? __app_id : 'smart.agriculture';\n    const databaseURL = \"https://smartagri-55783-default-rtdb.firebaseio.com\"; // Directly use the provided host\n\n    const firebaseConfig = {\n      apiKey: \"AIzaSyAxePwB435GenxGgyZ3Mf6KSLOJAMtavZE\",\n      authDomain: \"smartagri-55783.firebaseapp.com\",\n      databaseURL: databaseURL,\n      projectId: \"smartagri-55783\",\n      storageBucket: \"smartagri-55783.appspot.com\",\n      messagingSenderId: \"317181167730\",\n      appId: \"1:317181167730:android:c29397e546f004a9541aeb\" // Use the app ID from your JSON\n    };\n    const app = initializeApp(firebaseConfig);\n    const realtimeDb = getDatabase(app); // Get Realtime Database instance\n    const firebaseAuth = getAuth(app);\n    setDb(realtimeDb); // Store Realtime Database instance\n    setAuth(firebaseAuth);\n    const unsubscribeAuth = onAuthStateChanged(firebaseAuth, async user => {\n      if (user) {\n        setUserId(user.uid);\n      } else {\n        try {\n          if (typeof __initial_auth_token !== 'undefined' && __initial_auth_token) {\n            await signInWithCustomToken(firebaseAuth, __initial_auth_token);\n          } else {\n            await signInAnonymously(firebaseAuth);\n          }\n        } catch (error) {\n          console.error(\"Firebase anonymous sign-in failed:\", error);\n        }\n      }\n      setIsAuthReady(true);\n    });\n    return () => unsubscribeAuth();\n  }, []);\n\n  // Effect to listen for real-time sensor data from Realtime Database\n  useEffect(() => {\n    if (!db || !isAuthReady) return;\n\n    // Path for sensor data in Realtime Database, based on your screenshot\n    const sensorDataRef = ref(db, 'SmartAgri');\n    const unsubscribeDb = onValue(sensorDataRef, snapshot => {\n      const fetchedData = snapshot.val(); // .val() for Realtime Database\n      if (fetchedData) {\n        setAppSensorData(prevData => {\n          const updatedData = {\n            ...prevData\n          };\n          // Map keys from Firebase Realtime Database to app's state structure\n          updatedData.temperature.value = parseFloat(fetchedData.temperature) || 0;\n          updatedData.humidity.value = parseFloat(fetchedData.humidity) || 0;\n          updatedData.soilMoisture.value = parseFloat(fetchedData.sms) || 0; // sms is raw value\n          updatedData.nitrogen.value = parseFloat(fetchedData.nitro) || 0;\n          updatedData.phosphorus.value = parseFloat(fetchedData.phospho) || 0;\n          updatedData.potassium.value = parseFloat(fetchedData.potas) || 0;\n          return updatedData;\n        });\n      } else {\n        console.log(\"No sensor data found at 'SmartAgri' in Realtime Database. Initializing with default values.\");\n        // Set initial data if the path doesn't exist, using the RTDB keys\n        set(sensorDataRef, {\n          // Use set() for Realtime Database\n          temperature: initialSensorData.temperature.value,\n          humidity: initialSensorData.humidity.value,\n          sms: initialSensorData.soilMoisture.value,\n          // sms for soil moisture (raw)\n          nitro: initialSensorData.nitrogen.value,\n          // nitro for nitrogen\n          phospho: initialSensorData.phosphorus.value,\n          // phospho for phosphorus\n          potas: initialSensorData.potassium.value // potas for potassium\n          // You can add 'k', 'm', 'n' here if they are meant to be part of the initial data\n          // k: \"0\", m: \"0\", n: \"0\"\n        }).catch(e => console.error(\"Error setting initial sensor data to Realtime Database:\", e));\n      }\n    }, error => {\n      console.error(\"Error fetching real-time sensor data from Realtime Database:\", error);\n    });\n    return () => unsubscribeDb(); // Cleanup listener on component unmount\n  }, [db, isAuthReady]);\n  const handleNavigate = (page, parameter = null) => {\n    setCurrentPage(page);\n    setSelectedParameter(parameter);\n  };\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  const appContainerClass = `min-h-screen font-inter transition-colors duration-300 ${isDarkMode ? 'bg-gray-900 text-white' : 'bg-gray-50 text-gray-900'}`;\n  if (!isAuthReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-900 text-white\",\n      children: \"Loading Application...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: appContainerClass,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDarkMode,\n          className: `p-3 rounded-full shadow-md transition-colors duration-300\n                        ${isDarkMode ? 'bg-gray-700 text-yellow-400 hover:bg-gray-600' : 'bg-yellow-400 text-gray-800 hover:bg-yellow-300'}`,\n          children: isDarkMode ? /*#__PURE__*/_jsxDEV(Sun, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(Moon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 17\n      }, this), currentPage === 'home' && /*#__PURE__*/_jsxDEV(HomePage, {\n        onNavigate: handleNavigate,\n        isDarkMode: isDarkMode,\n        sensorData: appSensorData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 21\n      }, this), currentPage === 'detail' && selectedParameter && /*#__PURE__*/_jsxDEV(DetailPage, {\n        parameter: selectedParameter,\n        onNavigate: handleNavigate,\n        isDarkMode: isDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 21\n      }, this), currentPage === 'results' && /*#__PURE__*/_jsxDEV(ResultPage, {\n        onNavigate: handleNavigate,\n        isDarkMode: isDarkMode,\n        sensorData: appSensorData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 21\n      }, this), currentPage === 'soilAnalysis' && /*#__PURE__*/_jsxDEV(LandSoilAnalysisPage, {\n        onNavigate: handleNavigate,\n        isDarkMode: isDarkMode,\n        sensorData: appSensorData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 818,\n    columnNumber: 9\n  }, this);\n}\n_s3(App, \"1stwY973kcKfjlEjeON+wht1kdk=\");\n_c8 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"NitrogenIcon\");\n$RefreshReg$(_c2, \"PhosphorusIcon\");\n$RefreshReg$(_c3, \"PotassiumIcon\");\n$RefreshReg$(_c4, \"HomePage\");\n$RefreshReg$(_c5, \"DetailPage\");\n$RefreshReg$(_c6, \"LandSoilAnalysisPage\");\n$RefreshReg$(_c7, \"ResultPage\");\n$RefreshReg$(_c8, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Thermometer","Droplet","Sprout","Search","Sun","Moon","Leaf","FlaskConical","Wheat","XCircle","Play","StopCircle","Trash2","Microscope","initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","getDatabase","ref","onValue","set","jsxDEV","_jsxDEV","Fragment","_Fragment","NitrogenIcon","className","viewBox","fill","xmlns","children","x","y","width","height","rx","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","fontFamily","fontSize","fontWeight","textAnchor","_c","PhosphorusIcon","_c2","PotassiumIcon","_c3","getColorCode","element","value","favorable","comparisonValue","min","max","replace","split","map","Number","displayedValue","parseFloat","toFixed","initialSensorData","temperature","unit","humidity","soilMoisture","nitrogen","phosphorus","potassium","cropFavorableData","HomePage","onNavigate","isDarkMode","sensorData","cardClass","iconClass","onClick","_c4","DetailPage","parameter","getDetailIcon","param","parameterInfo","Temperature","description","Humidity","Nitrogen","Phosphorus","Potassium","info","detailIconClass","_c5","LandSoilAnalysisPage","_s","soilAnalysisSamples","setSoilAnalysisSamples","isStoringData","setIsStoringData","sampleCounterRef","intervalRef","current","setInterval","newSample","sampleNumber","timestamp","Date","toLocaleString","unitTemperature","unitHumidity","unitSoilMoisture","unitNitrogen","unitPhosphorus","unitPotassium","prevSamples","clearInterval","handleStartStoringData","handleStopStoringData","handleClearAllSamples","tableHeaderClass","tableCellClass","disabled","length","scope","sample","index","_c6","ResultPage","_s2","localSensorData","setLocalSensorData","selectedCrop","setSelectedCrop","soilHealthSuggestion","setSoilHealthSuggestion","cropPrediction","setCropPrediction","loadingSoilHealth","setLoadingSoilHealth","loadingCropPrediction","setLoadingCropPrediction","manualFavorableData","setManualFavorableData","prevLocalData","updatedData","key","prevData","g","toLowerCase","handleFavorableInputChange","handleCropChange","event","target","getGeminiResponse","prompt","type","chatHistory","push","role","parts","text","payload","contents","apiKey","apiUrl","response","fetch","method","headers","body","JSON","stringify","result","json","candidates","content","errorMessage","console","error","handleGetSoilHealthSuggestions","handleGetCropPredictions","handleClearAllSuggestions","favorableInputClass","selectClass","onChange","Object","keys","crop","entries","data","e","placeholder","_c7","App","_s3","currentPage","setCurrentPage","selectedParameter","setSelectedParameter","setIsDarkMode","db","setDb","auth","setAuth","userId","setUserId","isAuthReady","setIsAuthReady","appSensorData","setAppSensorData","appId","__app_id","databaseURL","firebaseConfig","authDomain","projectId","storageBucket","messagingSenderId","app","realtimeDb","firebaseAuth","unsubscribeAuth","user","uid","__initial_auth_token","sensorDataRef","unsubscribeDb","snapshot","fetchedData","val","sms","nitro","phospho","potas","log","catch","handleNavigate","page","toggleDarkMode","appContainerClass","_c8","$RefreshReg$"],"sources":["C:/Users/ARKO/OneDrive/Desktop/smart-agriculture-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Thermometer, Droplet, Sprout, Search, Sun, Moon, Leaf, FlaskConical, Wheat, XCircle, Play, StopCircle, Trash2, Microscope } from 'lucide-react'; // Added Microscope icon\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from 'firebase/auth';\nimport { getDatabase, ref, onValue, set } from 'firebase/database';\n\n// Custom SVG Icons for N, P, K to mimic periodic table style\nconst NitrogenIcon = ({ className }) => (\n    <svg className={className} viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"5\" y=\"5\" width=\"90\" height=\"90\" rx=\"10\" fill=\"#2ECC71\" stroke=\"#27AE60\" strokeWidth=\"4\"/>\n        <text x=\"20\" y=\"35\" fontFamily=\"Arial, sans-serif\" fontSize=\"20\" fontWeight=\"bold\" fill=\"white\">7</text>\n        <text x=\"50\" y=\"70\" fontFamily=\"Arial, sans-serif\" fontSize=\"45\" fontWeight=\"bold\" textAnchor=\"middle\" fill=\"white\">N</text>\n        <text x=\"50\" y=\"90\" fontFamily=\"Arial, sans-serif\" fontSize=\"14\" textAnchor=\"middle\" fill=\"white\">Nitrogen</text>\n    </svg>\n);\n\nconst PhosphorusIcon = ({ className }) => (\n    <svg className={className} viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"5\" y=\"5\" width=\"90\" height=\"90\" rx=\"10\" fill=\"#E67E22\" stroke=\"#D35400\" strokeWidth=\"4\"/>\n        <text x=\"20\" y=\"35\" fontFamily=\"Arial, sans-serif\" fontSize=\"20\" fontWeight=\"bold\" fill=\"white\">15</text>\n        <text x=\"50\" y=\"70\" fontFamily=\"Arial, sans-serif\" fontSize=\"45\" fontWeight=\"bold\" textAnchor=\"middle\" fill=\"white\">P</text>\n        <text x=\"50\" y=\"90\" fontFamily=\"Arial, sans-serif\" fontSize=\"14\" textAnchor=\"middle\" fill=\"white\">Phosphorus</text>\n    </svg>\n);\n\nconst PotassiumIcon = ({ className }) => (\n    <svg className={className} viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"5\" y=\"5\" width=\"90\" height=\"90\" rx=\"10\" fill=\"#9B59B6\" stroke=\"#8E44AD\" strokeWidth=\"4\"/>\n        <text x=\"20\" y=\"35\" fontFamily=\"Arial, sans-serif\" fontSize=\"20\" fontWeight=\"bold\" fill=\"white\">19</text>\n        <text x=\"50\" y=\"70\" fontFamily=\"Arial, sans-serif\" fontSize=\"45\" fontWeight=\"bold\" textAnchor=\"middle\" fill=\"white\">K</text>\n        <text x=\"50\" y=\"90\" fontFamily=\"Arial, sans-serif\" fontSize=\"14\" textAnchor=\"middle\" fill=\"white\">Potassium</text>\n    </svg>\n);\n\n// Helper function to get the color code based on value and favorable range\nconst getColorCode = (element, value, favorable) => {\n    if (!favorable) return '';\n\n    let comparisonValue = value;\n\n    if (element === 'Temperature') {\n        const [min, max] = favorable.replace('°C', '').split('~').map(Number);\n        if (comparisonValue >= min && comparisonValue <= max) return 'bg-green-500';\n        if (comparisonValue < min) return 'bg-red-500';\n        return 'bg-yellow-500';\n    } else if (element === 'Humidity') {\n        const [min, max] = favorable.replace('%', '').split('~').map(Number);\n        if (comparisonValue >= min && comparisonValue <= max) return 'bg-green-500';\n        if (comparisonValue < min) return 'bg-red-500';\n        return 'bg-yellow-500';\n    } else if (element === 'Soil Moisture') {\n        // For Soil Moisture, parse favorable as percentage range\n        const [min, max] = favorable.replace('%', '').split('-').map(Number);\n        // Compare the *displayed* percentage value\n        const displayedValue = parseFloat((value * 0.1).toFixed(1));\n        if (displayedValue >= min && displayedValue <= max) return 'bg-green-500';\n        if (displayedValue < min) return 'bg-red-500';\n        return 'bg-yellow-500';\n    } else {\n        const [min, max] = favorable.replace('mg/Kg', '').split('~').map(Number);\n        if (comparisonValue >= min && comparisonValue <= max) return 'bg-green-500';\n        if (comparisonValue < min) return 'bg-red-500';\n        return 'bg-yellow-500';\n    }\n};\n\n// Data for sensor readings and favorable ranges (initial values, will be updated by crop selection)\nconst initialSensorData = {\n    temperature: { value: 26.6, unit: '°C', favorable: '21°C~37°C' },\n    humidity: { value: 52.4, unit: '%', favorable: '60~80 %' },\n    soilMoisture: { value: 100, unit: '%', favorable: '70%-100%' }, // Updated favorable for initial\n    nitrogen: { value: 106, unit: 'mg/kg', favorable: '10~50 mg/Kg' },\n    phosphorus: { value: 2, unit: 'mg/kg', favorable: '15~73 mg/Kg' },\n    potassium: { value: 10, unit: 'mg/kg', favorable: '101-150 mg/Kg' },\n};\n\n// Favorable data for different crops\nconst cropFavorableData = {\n    'Manual': {\n        temperature: '21°C~37°C',\n        humidity: '60~80 %',\n        soilMoisture: '70%-100%', // Updated favorable for Manual\n        nitrogen: '10~50 mg/Kg',\n        phosphorus: '15~73 mg/Kg',\n        potassium: '101-150 mg/Kg',\n    },\n    'Wheat': {\n        temperature: '18°C~24°C',\n        humidity: '50~70 %',\n        soilMoisture: '600-900', // This is still raw, assuming these are raw values from sensor\n        nitrogen: '50~100 mg/Kg',\n        phosphorus: '20~40 mg/Kg',\n        potassium: '80~120 mg/Kg',\n    },\n    'Corn': {\n        temperature: '21°C~32°C',\n        humidity: '60~85 %',\n        soilMoisture: '750-1100',\n        nitrogen: '80~150 mg/Kg',\n        phosphorus: '30~60 mg/Kg',\n        potassium: '120~200 mg/Kg',\n    },\n    'Rice': {\n        temperature: '25°C~35°C',\n        humidity: '70~90 %',\n        soilMoisture: '900-1500',\n        nitrogen: '60~120 mg/Kg',\n        phosphorus: '25~50 mg/Kg',\n        potassium: '100~180 mg/Kg',\n    },\n    'Soybean': {\n        temperature: '20°C~30°C',\n        humidity: '60~80 %',\n        soilMoisture: '650-950',\n        nitrogen: '40~80 mg/Kg',\n        phosphorus: '25~55 mg/Kg',\n        potassium: '90~160 mg/Kg',\n    },\n    'Cotton': {\n        temperature: '25°C~35°C',\n        humidity: '55~75 %',\n        soilMoisture: '700-1000',\n        nitrogen: '70~130 mg/Kg',\n        phosphorus: '20~45 mg/Kg',\n        potassium: '110~190 mg/Kg',\n    },\n};\n\n\n// Homepage Component\nconst HomePage = ({ onNavigate, isDarkMode, sensorData }) => {\n    const cardClass = `flex flex-col items-center p-4 rounded-lg shadow-lg cursor-pointer transition-all duration-300 ${\n        isDarkMode ? 'bg-gray-800 text-white hover:bg-gray-700' : 'bg-white text-gray-800 hover:bg-gray-100'\n    }`;\n    const iconClass = `w-16 h-16 mb-2`;\n\n    return (\n        <div className=\"p-6\">\n            <h1 className={`text-4xl font-bold text-center mb-8 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                IOT Based <br /> Smart Agriculture System\n            </h1>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-10\">\n                <div className={cardClass} onClick={() => onNavigate('detail', 'Temperature')}>\n                    <Thermometer className={`${iconClass} ${isDarkMode ? 'text-blue-400' : 'text-blue-600'}`} />\n                    <p className=\"text-lg font-semibold\">Temperature : {sensorData.temperature.value} {sensorData.temperature.unit}</p>\n                </div>\n                <div className={cardClass} onClick={() => onNavigate('detail', 'Humidity')}>\n                    <Droplet className={`${iconClass} ${isDarkMode ? 'text-blue-400' : 'text-blue-600'}`} />\n                    <p className=\"text-lg font-semibold\">Humidity : {sensorData.humidity.value} {sensorData.humidity.unit}</p>\n                </div>\n                <div className={cardClass} onClick={() => onNavigate('detail', 'Soil Moisture')}>\n                    <Sprout className={`${iconClass} ${isDarkMode ? 'text-blue-400' : 'text-blue-600'}`} />\n                    <p className=\"text-lg font-semibold\">Soil Moisture : {parseFloat(sensorData.soilMoisture.value * 0.1).toFixed(1)} {sensorData.soilMoisture.unit}</p>\n                </div>\n                <div className={cardClass} onClick={() => onNavigate('detail', 'Nitrogen')}>\n                    <NitrogenIcon className={iconClass} />\n                    <p className=\"text-lg font-semibold\">Nitrogen : {sensorData.nitrogen.value} {sensorData.nitrogen.unit}</p>\n                </div>\n                <div className={cardClass} onClick={() => onNavigate('detail', 'Phosphorus')}>\n                    <PhosphorusIcon className={iconClass} />\n                    <p className=\"text-lg font-semibold\">Phosphorus : {sensorData.phosphorus.value} {sensorData.phosphorus.unit}</p>\n                </div>\n                <div className={cardClass} onClick={() => onNavigate('detail', 'Potassium')}>\n                    <PotassiumIcon className={iconClass} />\n                    <p className=\"text-lg font-semibold\">Potassium : {sensorData.potassium.value} {sensorData.potassium.unit}</p>\n                </div>\n            </div>\n\n            <div className=\"flex flex-col md:flex-row justify-center gap-4\">\n                <button\n                    onClick={() => onNavigate('results')}\n                    className={`flex items-center px-8 py-4 rounded-full shadow-xl text-xl font-semibold transition-all duration-300 mb-4 md:mb-0\n                    ${isDarkMode ? 'bg-green-600 text-white hover:bg-green-700' : 'bg-green-500 text-white hover:bg-green-600'}`}\n                >\n                    <Search className=\"w-6 h-6 mr-3\" />\n                    Result and Suggestions\n                </button>\n                <button\n                    onClick={() => onNavigate('soilAnalysis')}\n                    className={`flex items-center px-8 py-4 rounded-full shadow-xl text-xl font-semibold transition-all duration-300\n                    ${isDarkMode ? 'bg-blue-600 text-white hover:bg-blue-700' : 'bg-blue-500 text-white hover:bg-blue-600'}`}\n                >\n                    <Microscope className=\"w-6 h-6 mr-3\" />\n                    Land Soil Analysis\n                </button>\n            </div>\n        </div>\n    );\n};\n\n// DetailPage Component\nconst DetailPage = ({ parameter, onNavigate, isDarkMode }) => {\n    const getDetailIcon = (param, className) => {\n        switch (param) {\n            case 'Temperature': return <Thermometer className={`${className} text-red-500`} />;\n            case 'Humidity': return <Droplet className={`${className} text-blue-500`} />;\n            case 'Soil Moisture': return <Sprout className={`${className} text-green-500`} />;\n            case 'Nitrogen': return <NitrogenIcon className={className} />;\n            case 'Phosphorus': return <PhosphorusIcon className={className} />;\n            case 'Potassium': return <PotassiumIcon className={className} />;\n            default: return null;\n        }\n    };\n\n    const parameterInfo = {\n        Temperature: {\n            description: \"Temperature is a critical factor influencing plant growth, metabolic rates, and nutrient uptake. Each crop has an optimal temperature range for healthy development. Deviations can lead to stress, reduced yields, or even plant death. Monitoring and managing temperature, especially in controlled environments like greenhouses, is essential for maximizing agricultural productivity.\"\n        },\n        Humidity: {\n            description: \"Humidity, the amount of moisture in the air, plays a vital role in plant transpiration and overall health. High humidity can encourage fungal diseases, while low humidity can lead to excessive water loss and wilting. Maintaining appropriate humidity levels helps plants efficiently absorb water and nutrients, promoting robust growth.\"\n        },\n        'Soil Moisture': {\n            description: \"Soil moisture refers to the water content in the soil, crucial for nutrient transport and plant hydration. Adequate soil moisture ensures that plants can access the water they need for photosynthesis and other physiological processes. Both over-watering (leading to root rot) and under-watering (causing drought stress) can severely impact crop health and yield.\"\n        },\n        Nitrogen: {\n            description: \"Nitrogen acts as the building block for agricultural bounty. This essential nutrient fuels plant growth, forming the backbone of chlorophyll for photosynthesis and proteins for healthy structures. Like a baker needing flour, crops with adequate nitrogen flourish, producing strong stalks, vibrant leaves, and abundant fruits or grains. However, nitrogen mismanagement can disrupt this harmony. Excess nitrogen can pollute waterways and contribute to greenhouse gas emissions. Conversely, nitrogen deficiency hinders plant growth, resulting in stunted crops and diminished yields. Therefore, farmers strive for a balanced approach, employing efficient fertilization techniques and cover crops to ensure optimal nitrogen utilization for a thriving harvest.\"\n        },\n        Phosphorus: {\n            description: \"Phosphorus is vital for energy transfer within plants, playing a key role in photosynthesis, nutrient transport, and root development. It's particularly important for flowering, fruiting, and seed production. A deficiency can lead to stunted growth and poor crop quality, while proper levels ensure vigorous plant development and strong yields.\"\n        },\n        Potassium: {\n            description: \"Potassium is essential for overall plant vigor, disease resistance, and water regulation. It helps activate enzymes, improves nutrient uptake, and strengthens plant cell walls. Adequate potassium levels contribute to better fruit quality, increased drought tolerance, and enhanced resistance to pests and diseases, leading to healthier and more productive crops.\"\n        },\n    };\n\n    const info = parameterInfo[parameter] || { description: \"Information not available.\" };\n    const detailIconClass = \"w-24 h-24 mb-4\";\n\n    return (\n        <div className=\"p-6\">\n            <button\n                onClick={() => onNavigate('home')}\n                className={`mb-6 px-6 py-2 rounded-full font-semibold transition-all duration-300\n                ${isDarkMode ? 'bg-gray-700 text-white hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`}\n            >\n                &larr; Back to Home\n            </button>\n            <h2 className={`text-4xl font-bold text-center mb-8 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                {parameter}\n            </h2>\n            <div className={`flex flex-col items-center p-6 rounded-lg shadow-xl ${isDarkMode ? 'bg-gray-800 text-white' : 'bg-white text-gray-800'}`}>\n                {getDetailIcon(parameter, detailIconClass)}\n                <p className=\"text-lg leading-relaxed text-center max-w-2xl\">\n                    {info.description}\n                </p>\n            </div>\n        </div>\n    );\n};\n\n// LandSoilAnalysisPage Component\nconst LandSoilAnalysisPage = ({ onNavigate, isDarkMode, sensorData }) => {\n    const [soilAnalysisSamples, setSoilAnalysisSamples] = useState([]);\n    const [isStoringData, setIsStoringData] = useState(false);\n    const sampleCounterRef = useRef(0);\n    const intervalRef = useRef(null);\n\n    // Effect for continuous data storage\n    useEffect(() => {\n        if (isStoringData) {\n            intervalRef.current = setInterval(() => {\n                sampleCounterRef.current += 1;\n                const newSample = {\n                    sampleNumber: sampleCounterRef.current,\n                    timestamp: new Date().toLocaleString(),\n                    temperature: sensorData.temperature.value,\n                    humidity: sensorData.humidity.value,\n                    soilMoisture: parseFloat(sensorData.soilMoisture.value * 0.1).toFixed(1),\n                    nitrogen: sensorData.nitrogen.value,\n                    phosphorus: sensorData.phosphorus.value,\n                    potassium: sensorData.potassium.value,\n                    unitTemperature: sensorData.temperature.unit,\n                    unitHumidity: sensorData.humidity.unit,\n                    unitSoilMoisture: sensorData.soilMoisture.unit,\n                    unitNitrogen: sensorData.nitrogen.unit,\n                    unitPhosphorus: sensorData.phosphorus.unit,\n                    unitPotassium: sensorData.potassium.unit,\n                };\n                setSoilAnalysisSamples(prevSamples => [...prevSamples, newSample]);\n            }, 60000); // Sample every 60 seconds (1 minute)\n        } else {\n            if (intervalRef.current) {\n                clearInterval(intervalRef.current);\n                intervalRef.current = null;\n            }\n        }\n\n        return () => {\n            if (intervalRef.current) {\n                clearInterval(intervalRef.current);\n            }\n        };\n    }, [isStoringData, sensorData]);\n\n    const handleStartStoringData = () => {\n        setIsStoringData(true);\n    };\n\n    const handleStopStoringData = () => {\n        setIsStoringData(false);\n    };\n\n    const handleClearAllSamples = () => {\n        setIsStoringData(false);\n        setSoilAnalysisSamples([]);\n        sampleCounterRef.current = 0;\n    };\n\n    const tableHeaderClass = `px-4 py-3 text-left text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-600'} uppercase tracking-wider`;\n    const tableCellClass = `px-4 py-3 whitespace-nowrap text-sm ${isDarkMode ? 'text-white' : 'text-gray-900'}`;\n\n    return (\n        <div className=\"p-6\">\n            <button\n                onClick={() => onNavigate('home')}\n                className={`mb-6 px-6 py-2 rounded-full font-semibold transition-all duration-300\n                ${isDarkMode ? 'bg-gray-700 text-white hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`}\n            >\n                &larr; Back to Home\n            </button>\n            <h2 className={`text-4xl font-bold text-center mb-8 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                Land Soil Analysis\n            </h2>\n\n            <div className={`p-6 rounded-lg shadow-xl mb-8 ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`}>\n                <h3 className={`text-2xl font-bold text-center mb-4 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                    Collected Soil Samples\n                </h3>\n                <div className=\"flex flex-wrap justify-center gap-4 mb-6\">\n                    <button\n                        onClick={handleStartStoringData}\n                        disabled={isStoringData}\n                        className={`flex items-center px-6 py-3 rounded-full font-semibold transition-all duration-300\n                        ${isStoringData ? 'bg-gray-400 cursor-not-allowed' : (isDarkMode ? 'bg-green-600 text-white hover:bg-green-700' : 'bg-green-500 text-white hover:bg-green-600')}`}\n                    >\n                        <Play className=\"w-5 h-5 mr-2\" /> Start Storing Data\n                    </button>\n                    <button\n                        onClick={handleStopStoringData}\n                        disabled={!isStoringData}\n                        className={`flex items-center px-6 py-3 rounded-full font-semibold transition-all duration-300\n                        ${!isStoringData ? 'bg-gray-400 cursor-not-allowed' : (isDarkMode ? 'bg-red-600 text-white hover:bg-red-700' : 'bg-red-500 text-white hover:bg-red-600')}`}\n                    >\n                        <StopCircle className=\"w-5 h-5 mr-2\" /> Stop Storing Data\n                    </button>\n                    <button\n                        onClick={handleClearAllSamples}\n                        className={`flex items-center px-6 py-3 rounded-full font-semibold transition-all duration-300\n                        ${isDarkMode ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}\n                    >\n                        <Trash2 className=\"w-5 h-5 mr-2\" /> Clear All Samples\n                    </button>\n                </div>\n\n                {soilAnalysisSamples.length > 0 && (\n                    <div className=\"overflow-x-auto\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className={`${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'}`}>\n                                <tr>\n                                    <th scope=\"col\" className={tableHeaderClass}>Sample #</th>\n                                    <th scope=\"col\" className={tableHeaderClass}>Timestamp</th>\n                                    <th scope=\"col\" className={tableHeaderClass}>Temp ({sensorData.temperature.unit})</th>\n                                    <th scope=\"col\" className={tableHeaderClass}>Humidity ({sensorData.humidity.unit})</th>\n                                    <th scope=\"col\" className={tableHeaderClass}>Soil Moisture ({sensorData.soilMoisture.unit})</th>\n                                    <th scope=\"col\" className={tableHeaderClass}>Nitrogen ({sensorData.nitrogen.unit})</th>\n                                    <th scope=\"col\" className={tableHeaderClass}>Phosphorus ({sensorData.phosphorus.unit})</th>\n                                    <th scope=\"col\" className={tableHeaderClass}>Potassium ({sensorData.potassium.unit})</th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"divide-y divide-gray-200\">\n                                {soilAnalysisSamples.map((sample, index) => (\n                                    <tr key={index} className={isDarkMode ? 'bg-gray-800' : 'bg-white'}>\n                                        <td className={tableCellClass}>{sample.sampleNumber}</td>\n                                        <td className={tableCellClass}>{sample.timestamp}</td>\n                                        <td className={tableCellClass}>{sample.temperature}</td>\n                                        <td className={tableCellClass}>{sample.humidity}</td>\n                                        <td className={tableCellClass}>{sample.soilMoisture}</td>\n                                        <td className={tableCellClass}>{sample.nitrogen}</td>\n                                        <td className={tableCellClass}>{sample.phosphorus}</td>\n                                        <td className={tableCellClass}>{sample.potassium}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                )}\n                {soilAnalysisSamples.length === 0 && !isStoringData && (\n                    <p className={`text-center py-4 ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>No samples collected yet.</p>\n                )}\n                {isStoringData && (\n                    <p className={`text-center py-4 ${isDarkMode ? 'text-blue-400' : 'text-blue-600'}`}>Collecting samples...</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\n\n// ResultPage Component (unchanged logic, only removed Land Soil Analysis section)\nconst ResultPage = ({ onNavigate, isDarkMode, sensorData }) => {\n    const [localSensorData, setLocalSensorData] = useState(sensorData);\n    const [selectedCrop, setSelectedCrop] = useState('Manual');\n    const [soilHealthSuggestion, setSoilHealthSuggestion] = useState('');\n    const [cropPrediction, setCropPrediction] = useState('');\n    const [loadingSoilHealth, setLoadingSoilHealth] = useState(false);\n    const [loadingCropPrediction, setLoadingCropPrediction] = useState(false);\n    const [manualFavorableData, setManualFavorableData] = useState({\n        temperature: '21°C~37°C',\n        humidity: '60~80 %',\n        soilMoisture: '70%-100%', // Updated here\n        nitrogen: '10~50 mg/Kg',\n        phosphorus: '15~73 mg/Kg',\n        potassium: '101-150 mg/Kg',\n    });\n\n    useEffect(() => {\n        setLocalSensorData(prevLocalData => {\n            const updatedData = { ...prevLocalData };\n            for (const key in sensorData) {\n                if (updatedData[key]) {\n                    updatedData[key].value = sensorData[key].value;\n                }\n            }\n            return updatedData;\n        });\n    }, [sensorData]);\n\n    useEffect(() => {\n        if (selectedCrop !== 'Manual') {\n            setLocalSensorData(prevData => {\n                const updatedData = {};\n                for (const key in prevData) {\n                    updatedData[key] = {\n                        ...prevData[key],\n                        favorable: cropFavorableData[selectedCrop][key.replace(/([A-Z])/g, (g) => `-${g[0].toLowerCase()}`).toLowerCase().replace(/^-/, '')]\n                    };\n                }\n                return updatedData;\n            });\n        } else {\n            setLocalSensorData(prevData => {\n                const updatedData = {};\n                for (const key in prevData) {\n                    updatedData[key] = {\n                        ...prevData[key],\n                        favorable: manualFavorableData[key]\n                    };\n                }\n                return updatedData;\n            });\n        }\n        setSoilHealthSuggestion('');\n        setCropPrediction('');\n    }, [selectedCrop, manualFavorableData]);\n\n    const handleFavorableInputChange = (key, value) => {\n        setManualFavorableData(prevData => ({\n            ...prevData,\n            [key]: value\n        }));\n    };\n\n    const handleCropChange = (event) => {\n        setSelectedCrop(event.target.value);\n    };\n\n    const getGeminiResponse = async (prompt, type) => {\n        if (type === 'soilHealth') setLoadingSoilHealth(true);\n        if (type === 'cropPrediction') setLoadingCropPrediction(true);\n\n        try {\n            let chatHistory = [];\n            chatHistory.push({ role: \"user\", parts: [{ text: prompt }] });\n            const payload = { contents: chatHistory };\n            const apiKey = \"\";\n            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n\n            const response = await fetch(apiUrl, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(payload)\n            });\n\n            const result = await response.json();\n            if (result.candidates && result.candidates.length > 0 &&\n                result.candidates[0].content && result.candidates[0].content.parts &&\n                result.candidates[0].content.parts.length > 0) {\n                const text = result.candidates[0].content.parts[0].text;\n                if (type === 'soilHealth') setSoilHealthSuggestion(text);\n                if (type === 'cropPrediction') setCropPrediction(text);\n            } else {\n                const errorMessage = \"Failed to get suggestions. Please try again.\";\n                if (type === 'soilHealth') setSoilHealthSuggestion(errorMessage);\n                if (type === 'cropPrediction') setCropPrediction(errorMessage);\n                console.error(\"Gemini API response structure unexpected:\", result);\n            }\n        } catch (error) {\n            console.error(\"Error calling Gemini API:\", error);\n            const errorMessage = \"Error getting suggestions. Please check your network or try again later.\";\n            if (type === 'soilHealth') setSoilHealthSuggestion(errorMessage);\n            if (type === 'cropPrediction') setCropPrediction(errorMessage);\n        } finally {\n            if (type === 'soilHealth') setLoadingSoilHealth(false);\n            if (type === 'cropPrediction') setLoadingCropPrediction(false);\n        }\n    };\n\n    const handleGetSoilHealthSuggestions = () => {\n        setSoilHealthSuggestion('');\n        const prompt = `Given the current soil moisture and nutrient (Nitrogen, Phosphorus, Potassium) readings:\n        Soil Moisture: ${parseFloat(localSensorData.soilMoisture.value * 0.1).toFixed(1)}${localSensorData.soilMoisture.unit} (Favorable raw range: ${localSensorData.soilMoisture.favorable})\n        Nitrogen: ${localSensorData.nitrogen.value}${localSensorData.nitrogen.unit} (Favorable: ${localSensorData.nitrogen.favorable})\n        Phosphorus: ${localSensorData.phosphorus.value}${localSensorData.phosphorus.unit} (Favorable: ${localSensorData.phosphorus.favorable})\n        Potassium: ${localSensorData.potassium.value}${localSensorData.potassium.unit} (Favorable: ${localSensorData.potassium.favorable})\n\n        Provide precise and actionable suggestions ONLY on soil moisture and nutrient management for growing ${selectedCrop === 'Manual' ? 'your selected crop' : selectedCrop}. List specific steps to improve or maintain optimal levels.`;\n        getGeminiResponse(prompt, 'soilHealth');\n    };\n\n    const handleGetCropPredictions = () => {\n        setCropPrediction('');\n        const prompt = `Given the following soil and environmental parameters for growing ${selectedCrop === 'Manual' ? 'user-defined crop with custom favorable conditions' : selectedCrop}:\n        Temperature: ${localSensorData.temperature.value}${localSensorData.temperature.unit} (Favorable: ${localSensorData.temperature.favorable})\n        Humidity: ${localSensorData.humidity.value}${localSensorData.humidity.unit} (Favorable: ${localSensorData.humidity.favorable})\n        Soil Moisture: ${parseFloat(localSensorData.soilMoisture.value * 0.1).toFixed(1)}${localSensorData.soilMoisture.unit} (Favorable raw range: ${localSensorData.soilMoisture.favorable})\n        Nitrogen: ${localSensorData.nitrogen.value}${localSensorData.nitrogen.unit} (Favorable: ${localSensorData.nitrogen.favorable})\n        Phosphorus: ${localSensorData.phosphorus.value}${localSensorData.phosphorus.unit} (Favorable: ${localSensorData.phosphorus.favorable})\n        Potassium: ${localSensorData.potassium.value}${localSensorData.potassium.unit} (Favorable: ${localSensorData.potassium.favorable})\n\n        Based on these parameters, list only the crops that can grow well in these conditions. Do not include explanations or suggestions for adjusting conditions. Just a comma-separated list of suitable crop names.`;\n        getGeminiResponse(prompt, 'cropPrediction');\n    };\n\n    const handleClearAllSuggestions = () => {\n        setSoilHealthSuggestion('');\n        setCropPrediction('');\n    };\n\n    const tableHeaderClass = `px-4 py-3 text-left text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-600'} uppercase tracking-wider`;\n    const tableCellClass = `px-4 py-3 whitespace-nowrap text-sm ${isDarkMode ? 'text-white' : 'text-gray-900'}`;\n    const favorableInputClass = `w-full p-2 rounded-md border ${isDarkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-gray-50 border-gray-300 text-gray-900'}`;\n    const selectClass = `block w-full md:w-1/2 lg:w-1/3 px-4 py-2 rounded-md border shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n        isDarkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'\n    }`;\n\n    return (\n        <div className=\"p-6\">\n            <button\n                onClick={() => onNavigate('home')}\n                className={`mb-6 px-6 py-2 rounded-full font-semibold transition-all duration-300\n                ${isDarkMode ? 'bg-gray-700 text-white hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`}\n            >\n                &larr; Back to Home\n            </button>\n            <h2 className={`text-4xl font-bold text-center mb-8 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                Result & Suggestions\n            </h2>\n\n            <div className={`p-6 rounded-lg shadow-xl mb-8 ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`}>\n                <h3 className={`text-2xl font-bold mb-4 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                    Select Your Crop or Manual Input:\n                </h3>\n                <div className=\"mb-6 flex justify-center\">\n                    <select\n                        value={selectedCrop}\n                        onChange={handleCropChange}\n                        className={selectClass}\n                    >\n                        {Object.keys(cropFavorableData).map(crop => (\n                            <option key={crop} value={crop}>\n                                {crop}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className={`${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'}`}>\n                        <tr>\n                            <th scope=\"col\" className={tableHeaderClass}>Element</th>\n                            <th scope=\"col\" className={tableHeaderClass}>Present Data</th>\n                            <th scope=\"col\" className=\"px-4 py-3 text-left text-sm font-medium text-gray-600 uppercase tracking-wider\">Favorable for {selectedCrop}</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200\">\n                        {Object.entries(localSensorData).map(([key, data]) => (\n                            <tr key={key}>\n                                <td className={tableCellClass + ' font-medium capitalize'}>{key.replace(/([A-Z])/g, ' $1')}</td>\n                                <td className={`${tableCellClass} ${getColorCode(key.replace(/([A-Z])/g, ' $1'), data.value, data.favorable)} rounded-md`}>\n                                    {/* Present data is now read-only, fetched from Firebase */}\n                                    {key === 'soilMoisture' ? (\n                                        <span className=\"font-bold\">{parseFloat(data.value * 0.1).toFixed(1)}</span>\n                                    ) : (\n                                        <span className=\"font-bold\">{data.value}</span>\n                                    )}{' '}\n                                    {data.unit}\n                                </td>\n                                <td className={tableCellClass}>\n                                    {selectedCrop === 'Manual' ? (\n                                        <input\n                                            type=\"text\"\n                                            value={manualFavorableData[key]}\n                                            onChange={(e) => handleFavorableInputChange(key, e.target.value)}\n                                            className={favorableInputClass}\n                                            placeholder=\"e.g., 20~30°C or 70%-100%\"\n                                        />\n                                    ) : (\n                                        data.favorable\n                                    )}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n\n                <div className=\"mt-8\">\n                    <h3 className={`text-2xl font-bold mb-4 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>Color Code Meaning:</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                        <div className=\"flex items-center\">\n                            <span className=\"w-8 h-8 bg-red-500 rounded-md mr-3\"></span>\n                            <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>Less than required</span>\n                        </div>\n                        <div className=\"flex items-center\">\n                            <span className=\"w-8 h-8 bg-green-500 rounded-md mr-3\"></span>\n                            <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>Perfect amount</span>\n                        </div>\n                        <div className=\"flex items-center\">\n                            <span className=\"w-8 h-8 bg-yellow-500 rounded-md mr-3\"></span>\n                            <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>Higher than required</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"flex flex-col md:flex-row justify-center gap-4 mb-8\">\n                <button\n                    onClick={handleGetSoilHealthSuggestions}\n                    disabled={loadingSoilHealth}\n                    className={`flex items-center px-8 py-4 rounded-full shadow-xl text-xl font-semibold transition-all duration-300\n                    ${loadingSoilHealth ? 'bg-gray-400 cursor-not-allowed' : (isDarkMode ? 'bg-blue-600 text-white hover:bg-blue-700' : 'bg-blue-500 text-white hover:bg-blue-600')}`}\n                >\n                    <FlaskConical className=\"w-6 h-6 mr-3\" />\n                    {loadingSoilHealth ? 'Generating...' : 'Get Soil Health Suggestions'}\n                </button>\n                <button\n                    onClick={handleGetCropPredictions}\n                    disabled={loadingCropPrediction}\n                    className={`flex items-center px-8 py-4 rounded-full shadow-xl text-xl font-semibold transition-all duration-300\n                    ${loadingCropPrediction ? 'bg-gray-400 cursor-not-allowed' : (isDarkMode ? 'bg-purple-600 text-white hover:bg-purple-700' : 'bg-purple-500 text-white hover:bg-purple-600')}`}\n                >\n                    <Wheat className=\"w-6 h-6 mr-3\" />\n                    {loadingCropPrediction ? 'Generating...' : 'Get Crop Predictions'}\n                </button>\n            </div>\n\n            {/* Clear All Suggestions Button - Always visible on ResultPage */}\n            {(soilHealthSuggestion || cropPrediction) && (\n                <div className=\"flex justify-center mb-4\">\n                    <button\n                        onClick={handleClearAllSuggestions}\n                        className={`flex items-center px-6 py-2 rounded-full text-sm font-semibold transition-all duration-300\n                        ${isDarkMode ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}\n                    >\n                        <XCircle className=\"w-5 h-5 mr-2\" />\n                        Clear All Suggestions\n                    </button>\n                </div>\n            )}\n\n\n            {(soilHealthSuggestion || cropPrediction) && (\n                <div className={`p-6 rounded-lg shadow-xl ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`}>\n                    {soilHealthSuggestion && (\n                        <>\n                            <h3 className={`text-2xl font-bold mb-4 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>Soil Health Suggestions:</h3>\n                            <div className={`mt-4 p-4 rounded-md ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'} whitespace-pre-wrap mb-6`}>\n                                {soilHealthSuggestion}\n                            </div>\n                        </>\n                    )}\n                    {cropPrediction && (\n                        <>\n                            <h3 className={`text-2xl font-bold mb-4 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>Crop Predictions:</h3>\n                            <div className={`mt-4 p-4 rounded-md ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'} whitespace-pre-wrap`}>\n                                {cropPrediction}\n                            </div>\n                        </>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\n// Main App Component\nfunction App() {\n    const [currentPage, setCurrentPage] = useState('home');\n    const [selectedParameter, setSelectedParameter] = useState(null);\n    const [isDarkMode, setIsDarkMode] = useState(true); // Default to dark mode as per screenshot\n\n    // Firebase states\n    const [db, setDb] = useState(null);\n    const [auth, setAuth] = useState(null);\n    const [userId, setUserId] = useState(null);\n    const [isAuthReady, setIsAuthReady] = useState(false);\n\n    // State for sensor data, lifted up to App to pass to HomePage and ResultPage\n    const [appSensorData, setAppSensorData] = useState(initialSensorData);\n\n    // Initialize Firebase and authenticate\n    useEffect(() => {\n        const appId = typeof __app_id !== 'undefined' ? __app_id : 'smart.agriculture';\n        const databaseURL = \"https://smartagri-55783-default-rtdb.firebaseio.com\"; // Directly use the provided host\n\n        const firebaseConfig = {\n            apiKey: \"AIzaSyAxePwB435GenxGgyZ3Mf6KSLOJAMtavZE\",\n            authDomain: \"smartagri-55783.firebaseapp.com\",\n            databaseURL: databaseURL,\n            projectId: \"smartagri-55783\",\n            storageBucket: \"smartagri-55783.appspot.com\",\n            messagingSenderId: \"317181167730\",\n            appId: \"1:317181167730:android:c29397e546f004a9541aeb\", // Use the app ID from your JSON\n        };\n\n        const app = initializeApp(firebaseConfig);\n        const realtimeDb = getDatabase(app); // Get Realtime Database instance\n        const firebaseAuth = getAuth(app);\n\n        setDb(realtimeDb); // Store Realtime Database instance\n        setAuth(firebaseAuth);\n\n        const unsubscribeAuth = onAuthStateChanged(firebaseAuth, async (user) => {\n            if (user) {\n                setUserId(user.uid);\n            } else {\n                try {\n                    if (typeof __initial_auth_token !== 'undefined' && __initial_auth_token) {\n                        await signInWithCustomToken(firebaseAuth, __initial_auth_token);\n                    } else {\n                        await signInAnonymously(firebaseAuth);\n                    }\n                } catch (error) {\n                    console.error(\"Firebase anonymous sign-in failed:\", error);\n                }\n            }\n            setIsAuthReady(true);\n        });\n\n        return () => unsubscribeAuth();\n    }, []);\n\n    // Effect to listen for real-time sensor data from Realtime Database\n    useEffect(() => {\n        if (!db || !isAuthReady) return;\n\n        // Path for sensor data in Realtime Database, based on your screenshot\n        const sensorDataRef = ref(db, 'SmartAgri');\n\n        const unsubscribeDb = onValue(sensorDataRef, (snapshot) => {\n            const fetchedData = snapshot.val(); // .val() for Realtime Database\n            if (fetchedData) {\n                setAppSensorData(prevData => {\n                    const updatedData = { ...prevData };\n                    // Map keys from Firebase Realtime Database to app's state structure\n                    updatedData.temperature.value = parseFloat(fetchedData.temperature) || 0;\n                    updatedData.humidity.value = parseFloat(fetchedData.humidity) || 0;\n                    updatedData.soilMoisture.value = parseFloat(fetchedData.sms) || 0; // sms is raw value\n                    updatedData.nitrogen.value = parseFloat(fetchedData.nitro) || 0;\n                    updatedData.phosphorus.value = parseFloat(fetchedData.phospho) || 0;\n                    updatedData.potassium.value = parseFloat(fetchedData.potas) || 0;\n                    return updatedData;\n                });\n            } else {\n                console.log(\"No sensor data found at 'SmartAgri' in Realtime Database. Initializing with default values.\");\n                // Set initial data if the path doesn't exist, using the RTDB keys\n                set(sensorDataRef, { // Use set() for Realtime Database\n                    temperature: initialSensorData.temperature.value,\n                    humidity: initialSensorData.humidity.value,\n                    sms: initialSensorData.soilMoisture.value, // sms for soil moisture (raw)\n                    nitro: initialSensorData.nitrogen.value,   // nitro for nitrogen\n                    phospho: initialSensorData.phosphorus.value, // phospho for phosphorus\n                    potas: initialSensorData.potassium.value,  // potas for potassium\n                    // You can add 'k', 'm', 'n' here if they are meant to be part of the initial data\n                    // k: \"0\", m: \"0\", n: \"0\"\n                }).catch(e => console.error(\"Error setting initial sensor data to Realtime Database:\", e));\n            }\n        }, (error) => {\n            console.error(\"Error fetching real-time sensor data from Realtime Database:\", error);\n        });\n\n        return () => unsubscribeDb(); // Cleanup listener on component unmount\n    }, [db, isAuthReady]);\n\n\n    const handleNavigate = (page, parameter = null) => {\n        setCurrentPage(page);\n        setSelectedParameter(parameter);\n    };\n\n    const toggleDarkMode = () => {\n        setIsDarkMode(!isDarkMode);\n    };\n\n    const appContainerClass = `min-h-screen font-inter transition-colors duration-300 ${\n        isDarkMode ? 'bg-gray-900 text-white' : 'bg-gray-50 text-gray-900'\n    }`;\n\n    if (!isAuthReady) {\n        return (\n            <div className=\"flex items-center justify-center min-h-screen bg-gray-900 text-white\">\n                Loading Application...\n            </div>\n        );\n    }\n\n    return (\n        <div className={appContainerClass}>\n            <div className=\"container mx-auto p-4\">\n                <div className=\"flex justify-end mb-4\">\n                    <button\n                        onClick={toggleDarkMode}\n                        className={`p-3 rounded-full shadow-md transition-colors duration-300\n                        ${isDarkMode ? 'bg-gray-700 text-yellow-400 hover:bg-gray-600' : 'bg-yellow-400 text-gray-800 hover:bg-yellow-300'}`}\n                    >\n                        {isDarkMode ? <Sun className=\"w-6 h-6\" /> : <Moon className=\"w-6 h-6\" />}\n                    </button>\n                </div>\n\n                {currentPage === 'home' && (\n                    <HomePage onNavigate={handleNavigate} isDarkMode={isDarkMode} sensorData={appSensorData} />\n                )}\n                {currentPage === 'detail' && selectedParameter && (\n                    <DetailPage parameter={selectedParameter} onNavigate={handleNavigate} isDarkMode={isDarkMode} />\n                )}\n                {currentPage === 'results' && (\n                    <ResultPage onNavigate={handleNavigate} isDarkMode={isDarkMode} sensorData={appSensorData} />\n                )}\n                {currentPage === 'soilAnalysis' && (\n                    <LandSoilAnalysisPage onNavigate={handleNavigate} isDarkMode={isDarkMode} sensorData={appSensorData} />\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,YAAY,EAAEC,KAAK,EAAEC,OAAO,EAAEC,IAAI,EAAEC,UAAU,EAAEC,MAAM,EAAEC,UAAU,QAAQ,cAAc,CAAC,CAAC;AAC1J,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,iBAAiB,EAAEC,qBAAqB,EAAEC,kBAAkB,QAAQ,eAAe;AACrG,SAASC,WAAW,EAAEC,GAAG,EAAEC,OAAO,EAAEC,GAAG,QAAQ,mBAAmB;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAU,CAAC,kBAC/BJ,OAAA;EAAKI,SAAS,EAAEA,SAAU;EAACC,OAAO,EAAC,aAAa;EAACC,IAAI,EAAC,MAAM;EAACC,KAAK,EAAC,4BAA4B;EAAAC,QAAA,gBAC3FR,OAAA;IAAMS,CAAC,EAAC,GAAG;IAACC,CAAC,EAAC,GAAG;IAACC,KAAK,EAAC,IAAI;IAACC,MAAM,EAAC,IAAI;IAACC,EAAE,EAAC,IAAI;IAACP,IAAI,EAAC,SAAS;IAACQ,MAAM,EAAC,SAAS;IAACC,WAAW,EAAC;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,eAClGnB,OAAA;IAAMS,CAAC,EAAC,IAAI;IAACC,CAAC,EAAC,IAAI;IAACU,UAAU,EAAC,mBAAmB;IAACC,QAAQ,EAAC,IAAI;IAACC,UAAU,EAAC,MAAM;IAAChB,IAAI,EAAC,OAAO;IAAAE,QAAA,EAAC;EAAC;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,eACxGnB,OAAA;IAAMS,CAAC,EAAC,IAAI;IAACC,CAAC,EAAC,IAAI;IAACU,UAAU,EAAC,mBAAmB;IAACC,QAAQ,EAAC,IAAI;IAACC,UAAU,EAAC,MAAM;IAACC,UAAU,EAAC,QAAQ;IAACjB,IAAI,EAAC,OAAO;IAAAE,QAAA,EAAC;EAAC;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,eAC5HnB,OAAA;IAAMS,CAAC,EAAC,IAAI;IAACC,CAAC,EAAC,IAAI;IAACU,UAAU,EAAC,mBAAmB;IAACC,QAAQ,EAAC,IAAI;IAACE,UAAU,EAAC,QAAQ;IAACjB,IAAI,EAAC,OAAO;IAAAE,QAAA,EAAC;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAChH,CACR;AAACK,EAAA,GAPIrB,YAAY;AASlB,MAAMsB,cAAc,GAAGA,CAAC;EAAErB;AAAU,CAAC,kBACjCJ,OAAA;EAAKI,SAAS,EAAEA,SAAU;EAACC,OAAO,EAAC,aAAa;EAACC,IAAI,EAAC,MAAM;EAACC,KAAK,EAAC,4BAA4B;EAAAC,QAAA,gBAC3FR,OAAA;IAAMS,CAAC,EAAC,GAAG;IAACC,CAAC,EAAC,GAAG;IAACC,KAAK,EAAC,IAAI;IAACC,MAAM,EAAC,IAAI;IAACC,EAAE,EAAC,IAAI;IAACP,IAAI,EAAC,SAAS;IAACQ,MAAM,EAAC,SAAS;IAACC,WAAW,EAAC;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,eAClGnB,OAAA;IAAMS,CAAC,EAAC,IAAI;IAACC,CAAC,EAAC,IAAI;IAACU,UAAU,EAAC,mBAAmB;IAACC,QAAQ,EAAC,IAAI;IAACC,UAAU,EAAC,MAAM;IAAChB,IAAI,EAAC,OAAO;IAAAE,QAAA,EAAC;EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,eACzGnB,OAAA;IAAMS,CAAC,EAAC,IAAI;IAACC,CAAC,EAAC,IAAI;IAACU,UAAU,EAAC,mBAAmB;IAACC,QAAQ,EAAC,IAAI;IAACC,UAAU,EAAC,MAAM;IAACC,UAAU,EAAC,QAAQ;IAACjB,IAAI,EAAC,OAAO;IAAAE,QAAA,EAAC;EAAC;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,eAC5HnB,OAAA;IAAMS,CAAC,EAAC,IAAI;IAACC,CAAC,EAAC,IAAI;IAACU,UAAU,EAAC,mBAAmB;IAACC,QAAQ,EAAC,IAAI;IAACE,UAAU,EAAC,QAAQ;IAACjB,IAAI,EAAC,OAAO;IAAAE,QAAA,EAAC;EAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAClH,CACR;AAACO,GAAA,GAPID,cAAc;AASpB,MAAME,aAAa,GAAGA,CAAC;EAAEvB;AAAU,CAAC,kBAChCJ,OAAA;EAAKI,SAAS,EAAEA,SAAU;EAACC,OAAO,EAAC,aAAa;EAACC,IAAI,EAAC,MAAM;EAACC,KAAK,EAAC,4BAA4B;EAAAC,QAAA,gBAC3FR,OAAA;IAAMS,CAAC,EAAC,GAAG;IAACC,CAAC,EAAC,GAAG;IAACC,KAAK,EAAC,IAAI;IAACC,MAAM,EAAC,IAAI;IAACC,EAAE,EAAC,IAAI;IAACP,IAAI,EAAC,SAAS;IAACQ,MAAM,EAAC,SAAS;IAACC,WAAW,EAAC;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,eAClGnB,OAAA;IAAMS,CAAC,EAAC,IAAI;IAACC,CAAC,EAAC,IAAI;IAACU,UAAU,EAAC,mBAAmB;IAACC,QAAQ,EAAC,IAAI;IAACC,UAAU,EAAC,MAAM;IAAChB,IAAI,EAAC,OAAO;IAAAE,QAAA,EAAC;EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,eACzGnB,OAAA;IAAMS,CAAC,EAAC,IAAI;IAACC,CAAC,EAAC,IAAI;IAACU,UAAU,EAAC,mBAAmB;IAACC,QAAQ,EAAC,IAAI;IAACC,UAAU,EAAC,MAAM;IAACC,UAAU,EAAC,QAAQ;IAACjB,IAAI,EAAC,OAAO;IAAAE,QAAA,EAAC;EAAC;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,eAC5HnB,OAAA;IAAMS,CAAC,EAAC,IAAI;IAACC,CAAC,EAAC,IAAI;IAACU,UAAU,EAAC,mBAAmB;IAACC,QAAQ,EAAC,IAAI;IAACE,UAAU,EAAC,QAAQ;IAACjB,IAAI,EAAC,OAAO;IAAAE,QAAA,EAAC;EAAS;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACjH,CACR;;AAED;AAAAS,GAAA,GATMD,aAAa;AAUnB,MAAME,YAAY,GAAGA,CAACC,OAAO,EAAEC,KAAK,EAAEC,SAAS,KAAK;EAChD,IAAI,CAACA,SAAS,EAAE,OAAO,EAAE;EAEzB,IAAIC,eAAe,GAAGF,KAAK;EAE3B,IAAID,OAAO,KAAK,aAAa,EAAE;IAC3B,MAAM,CAACI,GAAG,EAAEC,GAAG,CAAC,GAAGH,SAAS,CAACI,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IACrE,IAAIN,eAAe,IAAIC,GAAG,IAAID,eAAe,IAAIE,GAAG,EAAE,OAAO,cAAc;IAC3E,IAAIF,eAAe,GAAGC,GAAG,EAAE,OAAO,YAAY;IAC9C,OAAO,eAAe;EAC1B,CAAC,MAAM,IAAIJ,OAAO,KAAK,UAAU,EAAE;IAC/B,MAAM,CAACI,GAAG,EAAEC,GAAG,CAAC,GAAGH,SAAS,CAACI,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IACpE,IAAIN,eAAe,IAAIC,GAAG,IAAID,eAAe,IAAIE,GAAG,EAAE,OAAO,cAAc;IAC3E,IAAIF,eAAe,GAAGC,GAAG,EAAE,OAAO,YAAY;IAC9C,OAAO,eAAe;EAC1B,CAAC,MAAM,IAAIJ,OAAO,KAAK,eAAe,EAAE;IACpC;IACA,MAAM,CAACI,GAAG,EAAEC,GAAG,CAAC,GAAGH,SAAS,CAACI,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IACpE;IACA,MAAMC,cAAc,GAAGC,UAAU,CAAC,CAACV,KAAK,GAAG,GAAG,EAAEW,OAAO,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAIF,cAAc,IAAIN,GAAG,IAAIM,cAAc,IAAIL,GAAG,EAAE,OAAO,cAAc;IACzE,IAAIK,cAAc,GAAGN,GAAG,EAAE,OAAO,YAAY;IAC7C,OAAO,eAAe;EAC1B,CAAC,MAAM;IACH,MAAM,CAACA,GAAG,EAAEC,GAAG,CAAC,GAAGH,SAAS,CAACI,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IACxE,IAAIN,eAAe,IAAIC,GAAG,IAAID,eAAe,IAAIE,GAAG,EAAE,OAAO,cAAc;IAC3E,IAAIF,eAAe,GAAGC,GAAG,EAAE,OAAO,YAAY;IAC9C,OAAO,eAAe;EAC1B;AACJ,CAAC;;AAED;AACA,MAAMS,iBAAiB,GAAG;EACtBC,WAAW,EAAE;IAAEb,KAAK,EAAE,IAAI;IAAEc,IAAI,EAAE,IAAI;IAAEb,SAAS,EAAE;EAAY,CAAC;EAChEc,QAAQ,EAAE;IAAEf,KAAK,EAAE,IAAI;IAAEc,IAAI,EAAE,GAAG;IAAEb,SAAS,EAAE;EAAU,CAAC;EAC1De,YAAY,EAAE;IAAEhB,KAAK,EAAE,GAAG;IAAEc,IAAI,EAAE,GAAG;IAAEb,SAAS,EAAE;EAAW,CAAC;EAAE;EAChEgB,QAAQ,EAAE;IAAEjB,KAAK,EAAE,GAAG;IAAEc,IAAI,EAAE,OAAO;IAAEb,SAAS,EAAE;EAAc,CAAC;EACjEiB,UAAU,EAAE;IAAElB,KAAK,EAAE,CAAC;IAAEc,IAAI,EAAE,OAAO;IAAEb,SAAS,EAAE;EAAc,CAAC;EACjEkB,SAAS,EAAE;IAAEnB,KAAK,EAAE,EAAE;IAAEc,IAAI,EAAE,OAAO;IAAEb,SAAS,EAAE;EAAgB;AACtE,CAAC;;AAED;AACA,MAAMmB,iBAAiB,GAAG;EACtB,QAAQ,EAAE;IACNP,WAAW,EAAE,WAAW;IACxBE,QAAQ,EAAE,SAAS;IACnBC,YAAY,EAAE,UAAU;IAAE;IAC1BC,QAAQ,EAAE,aAAa;IACvBC,UAAU,EAAE,aAAa;IACzBC,SAAS,EAAE;EACf,CAAC;EACD,OAAO,EAAE;IACLN,WAAW,EAAE,WAAW;IACxBE,QAAQ,EAAE,SAAS;IACnBC,YAAY,EAAE,SAAS;IAAE;IACzBC,QAAQ,EAAE,cAAc;IACxBC,UAAU,EAAE,aAAa;IACzBC,SAAS,EAAE;EACf,CAAC;EACD,MAAM,EAAE;IACJN,WAAW,EAAE,WAAW;IACxBE,QAAQ,EAAE,SAAS;IACnBC,YAAY,EAAE,UAAU;IACxBC,QAAQ,EAAE,cAAc;IACxBC,UAAU,EAAE,aAAa;IACzBC,SAAS,EAAE;EACf,CAAC;EACD,MAAM,EAAE;IACJN,WAAW,EAAE,WAAW;IACxBE,QAAQ,EAAE,SAAS;IACnBC,YAAY,EAAE,UAAU;IACxBC,QAAQ,EAAE,cAAc;IACxBC,UAAU,EAAE,aAAa;IACzBC,SAAS,EAAE;EACf,CAAC;EACD,SAAS,EAAE;IACPN,WAAW,EAAE,WAAW;IACxBE,QAAQ,EAAE,SAAS;IACnBC,YAAY,EAAE,SAAS;IACvBC,QAAQ,EAAE,aAAa;IACvBC,UAAU,EAAE,aAAa;IACzBC,SAAS,EAAE;EACf,CAAC;EACD,QAAQ,EAAE;IACNN,WAAW,EAAE,WAAW;IACxBE,QAAQ,EAAE,SAAS;IACnBC,YAAY,EAAE,UAAU;IACxBC,QAAQ,EAAE,cAAc;IACxBC,UAAU,EAAE,aAAa;IACzBC,SAAS,EAAE;EACf;AACJ,CAAC;;AAGD;AACA,MAAME,QAAQ,GAAGA,CAAC;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAW,CAAC,KAAK;EACzD,MAAMC,SAAS,GAAG,kGACdF,UAAU,GAAG,0CAA0C,GAAG,0CAA0C,EACtG;EACF,MAAMG,SAAS,GAAG,gBAAgB;EAElC,oBACIzD,OAAA;IAAKI,SAAS,EAAC,KAAK;IAAAI,QAAA,gBAChBR,OAAA;MAAII,SAAS,EAAE,uCAAuCkD,UAAU,GAAG,YAAY,GAAG,eAAe,EAAG;MAAA9C,QAAA,GAAC,YACvF,eAAAR,OAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,6BACpB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELnB,OAAA;MAAKI,SAAS,EAAC,4DAA4D;MAAAI,QAAA,gBACvER,OAAA;QAAKI,SAAS,EAAEoD,SAAU;QAACE,OAAO,EAAEA,CAAA,KAAML,UAAU,CAAC,QAAQ,EAAE,aAAa,CAAE;QAAA7C,QAAA,gBAC1ER,OAAA,CAACxB,WAAW;UAAC4B,SAAS,EAAE,GAAGqD,SAAS,IAAIH,UAAU,GAAG,eAAe,GAAG,eAAe;QAAG;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5FnB,OAAA;UAAGI,SAAS,EAAC,uBAAuB;UAAAI,QAAA,GAAC,gBAAc,EAAC+C,UAAU,CAACX,WAAW,CAACb,KAAK,EAAC,GAAC,EAACwB,UAAU,CAACX,WAAW,CAACC,IAAI;QAAA;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClH,CAAC,eACNnB,OAAA;QAAKI,SAAS,EAAEoD,SAAU;QAACE,OAAO,EAAEA,CAAA,KAAML,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAE;QAAA7C,QAAA,gBACvER,OAAA,CAACvB,OAAO;UAAC2B,SAAS,EAAE,GAAGqD,SAAS,IAAIH,UAAU,GAAG,eAAe,GAAG,eAAe;QAAG;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxFnB,OAAA;UAAGI,SAAS,EAAC,uBAAuB;UAAAI,QAAA,GAAC,aAAW,EAAC+C,UAAU,CAACT,QAAQ,CAACf,KAAK,EAAC,GAAC,EAACwB,UAAU,CAACT,QAAQ,CAACD,IAAI;QAAA;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzG,CAAC,eACNnB,OAAA;QAAKI,SAAS,EAAEoD,SAAU;QAACE,OAAO,EAAEA,CAAA,KAAML,UAAU,CAAC,QAAQ,EAAE,eAAe,CAAE;QAAA7C,QAAA,gBAC5ER,OAAA,CAACtB,MAAM;UAAC0B,SAAS,EAAE,GAAGqD,SAAS,IAAIH,UAAU,GAAG,eAAe,GAAG,eAAe;QAAG;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvFnB,OAAA;UAAGI,SAAS,EAAC,uBAAuB;UAAAI,QAAA,GAAC,kBAAgB,EAACiC,UAAU,CAACc,UAAU,CAACR,YAAY,CAAChB,KAAK,GAAG,GAAG,CAAC,CAACW,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC,EAACa,UAAU,CAACR,YAAY,CAACF,IAAI;QAAA;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnJ,CAAC,eACNnB,OAAA;QAAKI,SAAS,EAAEoD,SAAU;QAACE,OAAO,EAAEA,CAAA,KAAML,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAE;QAAA7C,QAAA,gBACvER,OAAA,CAACG,YAAY;UAACC,SAAS,EAAEqD;QAAU;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtCnB,OAAA;UAAGI,SAAS,EAAC,uBAAuB;UAAAI,QAAA,GAAC,aAAW,EAAC+C,UAAU,CAACP,QAAQ,CAACjB,KAAK,EAAC,GAAC,EAACwB,UAAU,CAACP,QAAQ,CAACH,IAAI;QAAA;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzG,CAAC,eACNnB,OAAA;QAAKI,SAAS,EAAEoD,SAAU;QAACE,OAAO,EAAEA,CAAA,KAAML,UAAU,CAAC,QAAQ,EAAE,YAAY,CAAE;QAAA7C,QAAA,gBACzER,OAAA,CAACyB,cAAc;UAACrB,SAAS,EAAEqD;QAAU;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxCnB,OAAA;UAAGI,SAAS,EAAC,uBAAuB;UAAAI,QAAA,GAAC,eAAa,EAAC+C,UAAU,CAACN,UAAU,CAAClB,KAAK,EAAC,GAAC,EAACwB,UAAU,CAACN,UAAU,CAACJ,IAAI;QAAA;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/G,CAAC,eACNnB,OAAA;QAAKI,SAAS,EAAEoD,SAAU;QAACE,OAAO,EAAEA,CAAA,KAAML,UAAU,CAAC,QAAQ,EAAE,WAAW,CAAE;QAAA7C,QAAA,gBACxER,OAAA,CAAC2B,aAAa;UAACvB,SAAS,EAAEqD;QAAU;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCnB,OAAA;UAAGI,SAAS,EAAC,uBAAuB;UAAAI,QAAA,GAAC,cAAY,EAAC+C,UAAU,CAACL,SAAS,CAACnB,KAAK,EAAC,GAAC,EAACwB,UAAU,CAACL,SAAS,CAACL,IAAI;QAAA;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5G,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENnB,OAAA;MAAKI,SAAS,EAAC,gDAAgD;MAAAI,QAAA,gBAC3DR,OAAA;QACI0D,OAAO,EAAEA,CAAA,KAAML,UAAU,CAAC,SAAS,CAAE;QACrCjD,SAAS,EAAE;AAC/B,sBAAsBkD,UAAU,GAAG,4CAA4C,GAAG,4CAA4C,EAAG;QAAA9C,QAAA,gBAE7GR,OAAA,CAACrB,MAAM;UAACyB,SAAS,EAAC;QAAc;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,0BAEvC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnB,OAAA;QACI0D,OAAO,EAAEA,CAAA,KAAML,UAAU,CAAC,cAAc,CAAE;QAC1CjD,SAAS,EAAE;AAC/B,sBAAsBkD,UAAU,GAAG,0CAA0C,GAAG,0CAA0C,EAAG;QAAA9C,QAAA,gBAEzGR,OAAA,CAACX,UAAU;UAACe,SAAS,EAAC;QAAc;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,sBAE3C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAED;AAAAwC,GAAA,GA7DMP,QAAQ;AA8Dd,MAAMQ,UAAU,GAAGA,CAAC;EAAEC,SAAS;EAAER,UAAU;EAAEC;AAAW,CAAC,KAAK;EAC1D,MAAMQ,aAAa,GAAGA,CAACC,KAAK,EAAE3D,SAAS,KAAK;IACxC,QAAQ2D,KAAK;MACT,KAAK,aAAa;QAAE,oBAAO/D,OAAA,CAACxB,WAAW;UAAC4B,SAAS,EAAE,GAAGA,SAAS;QAAgB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAClF,KAAK,UAAU;QAAE,oBAAOnB,OAAA,CAACvB,OAAO;UAAC2B,SAAS,EAAE,GAAGA,SAAS;QAAiB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC5E,KAAK,eAAe;QAAE,oBAAOnB,OAAA,CAACtB,MAAM;UAAC0B,SAAS,EAAE,GAAGA,SAAS;QAAkB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACjF,KAAK,UAAU;QAAE,oBAAOnB,OAAA,CAACG,YAAY;UAACC,SAAS,EAAEA;QAAU;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC9D,KAAK,YAAY;QAAE,oBAAOnB,OAAA,CAACyB,cAAc;UAACrB,SAAS,EAAEA;QAAU;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAClE,KAAK,WAAW;QAAE,oBAAOnB,OAAA,CAAC2B,aAAa;UAACvB,SAAS,EAAEA;QAAU;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAChE;QAAS,OAAO,IAAI;IACxB;EACJ,CAAC;EAED,MAAM6C,aAAa,GAAG;IAClBC,WAAW,EAAE;MACTC,WAAW,EAAE;IACjB,CAAC;IACDC,QAAQ,EAAE;MACND,WAAW,EAAE;IACjB,CAAC;IACD,eAAe,EAAE;MACbA,WAAW,EAAE;IACjB,CAAC;IACDE,QAAQ,EAAE;MACNF,WAAW,EAAE;IACjB,CAAC;IACDG,UAAU,EAAE;MACRH,WAAW,EAAE;IACjB,CAAC;IACDI,SAAS,EAAE;MACPJ,WAAW,EAAE;IACjB;EACJ,CAAC;EAED,MAAMK,IAAI,GAAGP,aAAa,CAACH,SAAS,CAAC,IAAI;IAAEK,WAAW,EAAE;EAA6B,CAAC;EACtF,MAAMM,eAAe,GAAG,gBAAgB;EAExC,oBACIxE,OAAA;IAAKI,SAAS,EAAC,KAAK;IAAAI,QAAA,gBAChBR,OAAA;MACI0D,OAAO,EAAEA,CAAA,KAAML,UAAU,CAAC,MAAM,CAAE;MAClCjD,SAAS,EAAE;AAC3B,kBAAkBkD,UAAU,GAAG,0CAA0C,GAAG,6CAA6C,EAAG;MAAA9C,QAAA,EAC/G;IAED;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnB,OAAA;MAAII,SAAS,EAAE,uCAAuCkD,UAAU,GAAG,YAAY,GAAG,eAAe,EAAG;MAAA9C,QAAA,EAC/FqD;IAAS;MAAA7C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACLnB,OAAA;MAAKI,SAAS,EAAE,uDAAuDkD,UAAU,GAAG,wBAAwB,GAAG,wBAAwB,EAAG;MAAA9C,QAAA,GACrIsD,aAAa,CAACD,SAAS,EAAEW,eAAe,CAAC,eAC1CxE,OAAA;QAAGI,SAAS,EAAC,+CAA+C;QAAAI,QAAA,EACvD+D,IAAI,CAACL;MAAW;QAAAlD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAED;AAAAsD,GAAA,GA3DMb,UAAU;AA4DhB,MAAMc,oBAAoB,GAAGA,CAAC;EAAErB,UAAU;EAAEC,UAAU;EAAEC;AAAW,CAAC,KAAK;EAAAoB,EAAA;EACrE,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGxG,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACyG,aAAa,EAAEC,gBAAgB,CAAC,GAAG1G,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM2G,gBAAgB,GAAGzG,MAAM,CAAC,CAAC,CAAC;EAClC,MAAM0G,WAAW,GAAG1G,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACAD,SAAS,CAAC,MAAM;IACZ,IAAIwG,aAAa,EAAE;MACfG,WAAW,CAACC,OAAO,GAAGC,WAAW,CAAC,MAAM;QACpCH,gBAAgB,CAACE,OAAO,IAAI,CAAC;QAC7B,MAAME,SAAS,GAAG;UACdC,YAAY,EAAEL,gBAAgB,CAACE,OAAO;UACtCI,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;UACtC5C,WAAW,EAAEW,UAAU,CAACX,WAAW,CAACb,KAAK;UACzCe,QAAQ,EAAES,UAAU,CAACT,QAAQ,CAACf,KAAK;UACnCgB,YAAY,EAAEN,UAAU,CAACc,UAAU,CAACR,YAAY,CAAChB,KAAK,GAAG,GAAG,CAAC,CAACW,OAAO,CAAC,CAAC,CAAC;UACxEM,QAAQ,EAAEO,UAAU,CAACP,QAAQ,CAACjB,KAAK;UACnCkB,UAAU,EAAEM,UAAU,CAACN,UAAU,CAAClB,KAAK;UACvCmB,SAAS,EAAEK,UAAU,CAACL,SAAS,CAACnB,KAAK;UACrC0D,eAAe,EAAElC,UAAU,CAACX,WAAW,CAACC,IAAI;UAC5C6C,YAAY,EAAEnC,UAAU,CAACT,QAAQ,CAACD,IAAI;UACtC8C,gBAAgB,EAAEpC,UAAU,CAACR,YAAY,CAACF,IAAI;UAC9C+C,YAAY,EAAErC,UAAU,CAACP,QAAQ,CAACH,IAAI;UACtCgD,cAAc,EAAEtC,UAAU,CAACN,UAAU,CAACJ,IAAI;UAC1CiD,aAAa,EAAEvC,UAAU,CAACL,SAAS,CAACL;QACxC,CAAC;QACDgC,sBAAsB,CAACkB,WAAW,IAAI,CAAC,GAAGA,WAAW,EAAEX,SAAS,CAAC,CAAC;MACtE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACf,CAAC,MAAM;MACH,IAAIH,WAAW,CAACC,OAAO,EAAE;QACrBc,aAAa,CAACf,WAAW,CAACC,OAAO,CAAC;QAClCD,WAAW,CAACC,OAAO,GAAG,IAAI;MAC9B;IACJ;IAEA,OAAO,MAAM;MACT,IAAID,WAAW,CAACC,OAAO,EAAE;QACrBc,aAAa,CAACf,WAAW,CAACC,OAAO,CAAC;MACtC;IACJ,CAAC;EACL,CAAC,EAAE,CAACJ,aAAa,EAAEvB,UAAU,CAAC,CAAC;EAE/B,MAAM0C,sBAAsB,GAAGA,CAAA,KAAM;IACjClB,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMmB,qBAAqB,GAAGA,CAAA,KAAM;IAChCnB,gBAAgB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMoB,qBAAqB,GAAGA,CAAA,KAAM;IAChCpB,gBAAgB,CAAC,KAAK,CAAC;IACvBF,sBAAsB,CAAC,EAAE,CAAC;IAC1BG,gBAAgB,CAACE,OAAO,GAAG,CAAC;EAChC,CAAC;EAED,MAAMkB,gBAAgB,GAAG,2CAA2C9C,UAAU,GAAG,eAAe,GAAG,eAAe,2BAA2B;EAC7I,MAAM+C,cAAc,GAAG,uCAAuC/C,UAAU,GAAG,YAAY,GAAG,eAAe,EAAE;EAE3G,oBACItD,OAAA;IAAKI,SAAS,EAAC,KAAK;IAAAI,QAAA,gBAChBR,OAAA;MACI0D,OAAO,EAAEA,CAAA,KAAML,UAAU,CAAC,MAAM,CAAE;MAClCjD,SAAS,EAAE;AAC3B,kBAAkBkD,UAAU,GAAG,0CAA0C,GAAG,6CAA6C,EAAG;MAAA9C,QAAA,EAC/G;IAED;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnB,OAAA;MAAII,SAAS,EAAE,uCAAuCkD,UAAU,GAAG,YAAY,GAAG,eAAe,EAAG;MAAA9C,QAAA,EAAC;IAErG;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELnB,OAAA;MAAKI,SAAS,EAAE,iCAAiCkD,UAAU,GAAG,aAAa,GAAG,UAAU,EAAG;MAAA9C,QAAA,gBACvFR,OAAA;QAAII,SAAS,EAAE,uCAAuCkD,UAAU,GAAG,YAAY,GAAG,eAAe,EAAG;QAAA9C,QAAA,EAAC;MAErG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLnB,OAAA;QAAKI,SAAS,EAAC,0CAA0C;QAAAI,QAAA,gBACrDR,OAAA;UACI0D,OAAO,EAAEuC,sBAAuB;UAChCK,QAAQ,EAAExB,aAAc;UACxB1E,SAAS,EAAE;AACnC,0BAA0B0E,aAAa,GAAG,gCAAgC,GAAIxB,UAAU,GAAG,4CAA4C,GAAG,4CAA6C,EAAG;UAAA9C,QAAA,gBAElKR,OAAA,CAACd,IAAI;YAACkB,SAAS,EAAC;UAAc;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,uBACrC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTnB,OAAA;UACI0D,OAAO,EAAEwC,qBAAsB;UAC/BI,QAAQ,EAAE,CAACxB,aAAc;UACzB1E,SAAS,EAAE;AACnC,0BAA0B,CAAC0E,aAAa,GAAG,gCAAgC,GAAIxB,UAAU,GAAG,wCAAwC,GAAG,wCAAyC,EAAG;UAAA9C,QAAA,gBAE3JR,OAAA,CAACb,UAAU;YAACiB,SAAS,EAAC;UAAc;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,sBAC3C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTnB,OAAA;UACI0D,OAAO,EAAEyC,qBAAsB;UAC/B/F,SAAS,EAAE;AACnC,0BAA0BkD,UAAU,GAAG,6CAA6C,GAAG,6CAA6C,EAAG;UAAA9C,QAAA,gBAE/GR,OAAA,CAACZ,MAAM;YAACgB,SAAS,EAAC;UAAc;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,sBACvC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,EAELyD,mBAAmB,CAAC2B,MAAM,GAAG,CAAC,iBAC3BvG,OAAA;QAAKI,SAAS,EAAC,iBAAiB;QAAAI,QAAA,eAC5BR,OAAA;UAAOI,SAAS,EAAC,qCAAqC;UAAAI,QAAA,gBAClDR,OAAA;YAAOI,SAAS,EAAE,GAAGkD,UAAU,GAAG,aAAa,GAAG,YAAY,EAAG;YAAA9C,QAAA,eAC7DR,OAAA;cAAAQ,QAAA,gBACIR,OAAA;gBAAIwG,KAAK,EAAC,KAAK;gBAACpG,SAAS,EAAEgG,gBAAiB;gBAAA5F,QAAA,EAAC;cAAQ;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1DnB,OAAA;gBAAIwG,KAAK,EAAC,KAAK;gBAACpG,SAAS,EAAEgG,gBAAiB;gBAAA5F,QAAA,EAAC;cAAS;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC3DnB,OAAA;gBAAIwG,KAAK,EAAC,KAAK;gBAACpG,SAAS,EAAEgG,gBAAiB;gBAAA5F,QAAA,GAAC,QAAM,EAAC+C,UAAU,CAACX,WAAW,CAACC,IAAI,EAAC,GAAC;cAAA;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtFnB,OAAA;gBAAIwG,KAAK,EAAC,KAAK;gBAACpG,SAAS,EAAEgG,gBAAiB;gBAAA5F,QAAA,GAAC,YAAU,EAAC+C,UAAU,CAACT,QAAQ,CAACD,IAAI,EAAC,GAAC;cAAA;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACvFnB,OAAA;gBAAIwG,KAAK,EAAC,KAAK;gBAACpG,SAAS,EAAEgG,gBAAiB;gBAAA5F,QAAA,GAAC,iBAAe,EAAC+C,UAAU,CAACR,YAAY,CAACF,IAAI,EAAC,GAAC;cAAA;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChGnB,OAAA;gBAAIwG,KAAK,EAAC,KAAK;gBAACpG,SAAS,EAAEgG,gBAAiB;gBAAA5F,QAAA,GAAC,YAAU,EAAC+C,UAAU,CAACP,QAAQ,CAACH,IAAI,EAAC,GAAC;cAAA;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACvFnB,OAAA;gBAAIwG,KAAK,EAAC,KAAK;gBAACpG,SAAS,EAAEgG,gBAAiB;gBAAA5F,QAAA,GAAC,cAAY,EAAC+C,UAAU,CAACN,UAAU,CAACJ,IAAI,EAAC,GAAC;cAAA;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC3FnB,OAAA;gBAAIwG,KAAK,EAAC,KAAK;gBAACpG,SAAS,EAAEgG,gBAAiB;gBAAA5F,QAAA,GAAC,aAAW,EAAC+C,UAAU,CAACL,SAAS,CAACL,IAAI,EAAC,GAAC;cAAA;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRnB,OAAA;YAAOI,SAAS,EAAC,0BAA0B;YAAAI,QAAA,EACtCoE,mBAAmB,CAACtC,GAAG,CAAC,CAACmE,MAAM,EAAEC,KAAK,kBACnC1G,OAAA;cAAgBI,SAAS,EAAEkD,UAAU,GAAG,aAAa,GAAG,UAAW;cAAA9C,QAAA,gBAC/DR,OAAA;gBAAII,SAAS,EAAEiG,cAAe;gBAAA7F,QAAA,EAAEiG,MAAM,CAACpB;cAAY;gBAAArE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzDnB,OAAA;gBAAII,SAAS,EAAEiG,cAAe;gBAAA7F,QAAA,EAAEiG,MAAM,CAACnB;cAAS;gBAAAtE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACtDnB,OAAA;gBAAII,SAAS,EAAEiG,cAAe;gBAAA7F,QAAA,EAAEiG,MAAM,CAAC7D;cAAW;gBAAA5B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxDnB,OAAA;gBAAII,SAAS,EAAEiG,cAAe;gBAAA7F,QAAA,EAAEiG,MAAM,CAAC3D;cAAQ;gBAAA9B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrDnB,OAAA;gBAAII,SAAS,EAAEiG,cAAe;gBAAA7F,QAAA,EAAEiG,MAAM,CAAC1D;cAAY;gBAAA/B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzDnB,OAAA;gBAAII,SAAS,EAAEiG,cAAe;gBAAA7F,QAAA,EAAEiG,MAAM,CAACzD;cAAQ;gBAAAhC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrDnB,OAAA;gBAAII,SAAS,EAAEiG,cAAe;gBAAA7F,QAAA,EAAEiG,MAAM,CAACxD;cAAU;gBAAAjC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvDnB,OAAA;gBAAII,SAAS,EAAEiG,cAAe;gBAAA7F,QAAA,EAAEiG,MAAM,CAACvD;cAAS;gBAAAlC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GARjDuF,KAAK;cAAA1F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASV,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CACR,EACAyD,mBAAmB,CAAC2B,MAAM,KAAK,CAAC,IAAI,CAACzB,aAAa,iBAC/C9E,OAAA;QAAGI,SAAS,EAAE,oBAAoBkD,UAAU,GAAG,eAAe,GAAG,eAAe,EAAG;QAAA9C,QAAA,EAAC;MAAyB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACnH,EACA2D,aAAa,iBACV9E,OAAA;QAAGI,SAAS,EAAE,oBAAoBkD,UAAU,GAAG,eAAe,GAAG,eAAe,EAAG;QAAA9C,QAAA,EAAC;MAAqB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC/G;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAGD;AAAAwD,EAAA,CAnJMD,oBAAoB;AAAAiC,GAAA,GAApBjC,oBAAoB;AAoJ1B,MAAMkC,UAAU,GAAGA,CAAC;EAAEvD,UAAU;EAAEC,UAAU;EAAEC;AAAW,CAAC,KAAK;EAAAsD,GAAA;EAC3D,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG1I,QAAQ,CAACkF,UAAU,CAAC;EAClE,MAAM,CAACyD,YAAY,EAAEC,eAAe,CAAC,GAAG5I,QAAQ,CAAC,QAAQ,CAAC;EAC1D,MAAM,CAAC6I,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG9I,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAAC+I,cAAc,EAAEC,iBAAiB,CAAC,GAAGhJ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiJ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlJ,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACmJ,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGpJ,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACqJ,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGtJ,QAAQ,CAAC;IAC3DuE,WAAW,EAAE,WAAW;IACxBE,QAAQ,EAAE,SAAS;IACnBC,YAAY,EAAE,UAAU;IAAE;IAC1BC,QAAQ,EAAE,aAAa;IACvBC,UAAU,EAAE,aAAa;IACzBC,SAAS,EAAE;EACf,CAAC,CAAC;EAEF5E,SAAS,CAAC,MAAM;IACZyI,kBAAkB,CAACa,aAAa,IAAI;MAChC,MAAMC,WAAW,GAAG;QAAE,GAAGD;MAAc,CAAC;MACxC,KAAK,MAAME,GAAG,IAAIvE,UAAU,EAAE;QAC1B,IAAIsE,WAAW,CAACC,GAAG,CAAC,EAAE;UAClBD,WAAW,CAACC,GAAG,CAAC,CAAC/F,KAAK,GAAGwB,UAAU,CAACuE,GAAG,CAAC,CAAC/F,KAAK;QAClD;MACJ;MACA,OAAO8F,WAAW;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,CAACtE,UAAU,CAAC,CAAC;EAEhBjF,SAAS,CAAC,MAAM;IACZ,IAAI0I,YAAY,KAAK,QAAQ,EAAE;MAC3BD,kBAAkB,CAACgB,QAAQ,IAAI;QAC3B,MAAMF,WAAW,GAAG,CAAC,CAAC;QACtB,KAAK,MAAMC,GAAG,IAAIC,QAAQ,EAAE;UACxBF,WAAW,CAACC,GAAG,CAAC,GAAG;YACf,GAAGC,QAAQ,CAACD,GAAG,CAAC;YAChB9F,SAAS,EAAEmB,iBAAiB,CAAC6D,YAAY,CAAC,CAACc,GAAG,CAAC1F,OAAO,CAAC,UAAU,EAAG4F,CAAC,IAAK,IAAIA,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,EAAE,CAAC,CAACA,WAAW,CAAC,CAAC,CAAC7F,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;UACvI,CAAC;QACL;QACA,OAAOyF,WAAW;MACtB,CAAC,CAAC;IACN,CAAC,MAAM;MACHd,kBAAkB,CAACgB,QAAQ,IAAI;QAC3B,MAAMF,WAAW,GAAG,CAAC,CAAC;QACtB,KAAK,MAAMC,GAAG,IAAIC,QAAQ,EAAE;UACxBF,WAAW,CAACC,GAAG,CAAC,GAAG;YACf,GAAGC,QAAQ,CAACD,GAAG,CAAC;YAChB9F,SAAS,EAAE0F,mBAAmB,CAACI,GAAG;UACtC,CAAC;QACL;QACA,OAAOD,WAAW;MACtB,CAAC,CAAC;IACN;IACAV,uBAAuB,CAAC,EAAE,CAAC;IAC3BE,iBAAiB,CAAC,EAAE,CAAC;EACzB,CAAC,EAAE,CAACL,YAAY,EAAEU,mBAAmB,CAAC,CAAC;EAEvC,MAAMQ,0BAA0B,GAAGA,CAACJ,GAAG,EAAE/F,KAAK,KAAK;IAC/C4F,sBAAsB,CAACI,QAAQ,KAAK;MAChC,GAAGA,QAAQ;MACX,CAACD,GAAG,GAAG/F;IACX,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMoG,gBAAgB,GAAIC,KAAK,IAAK;IAChCnB,eAAe,CAACmB,KAAK,CAACC,MAAM,CAACtG,KAAK,CAAC;EACvC,CAAC;EAED,MAAMuG,iBAAiB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,IAAI,KAAK;IAC9C,IAAIA,IAAI,KAAK,YAAY,EAAEjB,oBAAoB,CAAC,IAAI,CAAC;IACrD,IAAIiB,IAAI,KAAK,gBAAgB,EAAEf,wBAAwB,CAAC,IAAI,CAAC;IAE7D,IAAI;MACA,IAAIgB,WAAW,GAAG,EAAE;MACpBA,WAAW,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE,CAAC;UAAEC,IAAI,EAAEN;QAAO,CAAC;MAAE,CAAC,CAAC;MAC7D,MAAMO,OAAO,GAAG;QAAEC,QAAQ,EAAEN;MAAY,CAAC;MACzC,MAAMO,MAAM,GAAG,EAAE;MACjB,MAAMC,MAAM,GAAG,gGAAgGD,MAAM,EAAE;MAEvH,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,EAAE;QACjCG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,OAAO;MAChC,CAAC,CAAC;MAEF,MAAMW,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpC,IAAID,MAAM,CAACE,UAAU,IAAIF,MAAM,CAACE,UAAU,CAACpD,MAAM,GAAG,CAAC,IACjDkD,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,IAAIH,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAAChB,KAAK,IAClEa,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAAChB,KAAK,CAACrC,MAAM,GAAG,CAAC,EAAE;QAC/C,MAAMsC,IAAI,GAAGY,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAAChB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI;QACvD,IAAIL,IAAI,KAAK,YAAY,EAAErB,uBAAuB,CAAC0B,IAAI,CAAC;QACxD,IAAIL,IAAI,KAAK,gBAAgB,EAAEnB,iBAAiB,CAACwB,IAAI,CAAC;MAC1D,CAAC,MAAM;QACH,MAAMgB,YAAY,GAAG,8CAA8C;QACnE,IAAIrB,IAAI,KAAK,YAAY,EAAErB,uBAAuB,CAAC0C,YAAY,CAAC;QAChE,IAAIrB,IAAI,KAAK,gBAAgB,EAAEnB,iBAAiB,CAACwC,YAAY,CAAC;QAC9DC,OAAO,CAACC,KAAK,CAAC,2CAA2C,EAAEN,MAAM,CAAC;MACtE;IACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMF,YAAY,GAAG,0EAA0E;MAC/F,IAAIrB,IAAI,KAAK,YAAY,EAAErB,uBAAuB,CAAC0C,YAAY,CAAC;MAChE,IAAIrB,IAAI,KAAK,gBAAgB,EAAEnB,iBAAiB,CAACwC,YAAY,CAAC;IAClE,CAAC,SAAS;MACN,IAAIrB,IAAI,KAAK,YAAY,EAAEjB,oBAAoB,CAAC,KAAK,CAAC;MACtD,IAAIiB,IAAI,KAAK,gBAAgB,EAAEf,wBAAwB,CAAC,KAAK,CAAC;IAClE;EACJ,CAAC;EAED,MAAMuC,8BAA8B,GAAGA,CAAA,KAAM;IACzC7C,uBAAuB,CAAC,EAAE,CAAC;IAC3B,MAAMoB,MAAM,GAAG;AACvB,yBAAyB9F,UAAU,CAACqE,eAAe,CAAC/D,YAAY,CAAChB,KAAK,GAAG,GAAG,CAAC,CAACW,OAAO,CAAC,CAAC,CAAC,GAAGoE,eAAe,CAAC/D,YAAY,CAACF,IAAI,0BAA0BiE,eAAe,CAAC/D,YAAY,CAACf,SAAS;AAC5L,oBAAoB8E,eAAe,CAAC9D,QAAQ,CAACjB,KAAK,GAAG+E,eAAe,CAAC9D,QAAQ,CAACH,IAAI,gBAAgBiE,eAAe,CAAC9D,QAAQ,CAAChB,SAAS;AACpI,sBAAsB8E,eAAe,CAAC7D,UAAU,CAAClB,KAAK,GAAG+E,eAAe,CAAC7D,UAAU,CAACJ,IAAI,gBAAgBiE,eAAe,CAAC7D,UAAU,CAACjB,SAAS;AAC5I,qBAAqB8E,eAAe,CAAC5D,SAAS,CAACnB,KAAK,GAAG+E,eAAe,CAAC5D,SAAS,CAACL,IAAI,gBAAgBiE,eAAe,CAAC5D,SAAS,CAAClB,SAAS;AACxI;AACA,+GAA+GgF,YAAY,KAAK,QAAQ,GAAG,oBAAoB,GAAGA,YAAY,8DAA8D;IACpOsB,iBAAiB,CAACC,MAAM,EAAE,YAAY,CAAC;EAC3C,CAAC;EAED,MAAM0B,wBAAwB,GAAGA,CAAA,KAAM;IACnC5C,iBAAiB,CAAC,EAAE,CAAC;IACrB,MAAMkB,MAAM,GAAG,qEAAqEvB,YAAY,KAAK,QAAQ,GAAG,oDAAoD,GAAGA,YAAY;AAC3L,uBAAuBF,eAAe,CAAClE,WAAW,CAACb,KAAK,GAAG+E,eAAe,CAAClE,WAAW,CAACC,IAAI,gBAAgBiE,eAAe,CAAClE,WAAW,CAACZ,SAAS;AAChJ,oBAAoB8E,eAAe,CAAChE,QAAQ,CAACf,KAAK,GAAG+E,eAAe,CAAChE,QAAQ,CAACD,IAAI,gBAAgBiE,eAAe,CAAChE,QAAQ,CAACd,SAAS;AACpI,yBAAyBS,UAAU,CAACqE,eAAe,CAAC/D,YAAY,CAAChB,KAAK,GAAG,GAAG,CAAC,CAACW,OAAO,CAAC,CAAC,CAAC,GAAGoE,eAAe,CAAC/D,YAAY,CAACF,IAAI,0BAA0BiE,eAAe,CAAC/D,YAAY,CAACf,SAAS;AAC5L,oBAAoB8E,eAAe,CAAC9D,QAAQ,CAACjB,KAAK,GAAG+E,eAAe,CAAC9D,QAAQ,CAACH,IAAI,gBAAgBiE,eAAe,CAAC9D,QAAQ,CAAChB,SAAS;AACpI,sBAAsB8E,eAAe,CAAC7D,UAAU,CAAClB,KAAK,GAAG+E,eAAe,CAAC7D,UAAU,CAACJ,IAAI,gBAAgBiE,eAAe,CAAC7D,UAAU,CAACjB,SAAS;AAC5I,qBAAqB8E,eAAe,CAAC5D,SAAS,CAACnB,KAAK,GAAG+E,eAAe,CAAC5D,SAAS,CAACL,IAAI,gBAAgBiE,eAAe,CAAC5D,SAAS,CAAClB,SAAS;AACxI;AACA,wNAAwN;IAChNsG,iBAAiB,CAACC,MAAM,EAAE,gBAAgB,CAAC;EAC/C,CAAC;EAED,MAAM2B,yBAAyB,GAAGA,CAAA,KAAM;IACpC/C,uBAAuB,CAAC,EAAE,CAAC;IAC3BE,iBAAiB,CAAC,EAAE,CAAC;EACzB,CAAC;EAED,MAAMjB,gBAAgB,GAAG,2CAA2C9C,UAAU,GAAG,eAAe,GAAG,eAAe,2BAA2B;EAC7I,MAAM+C,cAAc,GAAG,uCAAuC/C,UAAU,GAAG,YAAY,GAAG,eAAe,EAAE;EAC3G,MAAM6G,mBAAmB,GAAG,gCAAgC7G,UAAU,GAAG,wCAAwC,GAAG,0CAA0C,EAAE;EAChK,MAAM8G,WAAW,GAAG,4HAChB9G,UAAU,GAAG,wCAAwC,GAAG,wCAAwC,EAClG;EAEF,oBACItD,OAAA;IAAKI,SAAS,EAAC,KAAK;IAAAI,QAAA,gBAChBR,OAAA;MACI0D,OAAO,EAAEA,CAAA,KAAML,UAAU,CAAC,MAAM,CAAE;MAClCjD,SAAS,EAAE;AAC3B,kBAAkBkD,UAAU,GAAG,0CAA0C,GAAG,6CAA6C,EAAG;MAAA9C,QAAA,EAC/G;IAED;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnB,OAAA;MAAII,SAAS,EAAE,uCAAuCkD,UAAU,GAAG,YAAY,GAAG,eAAe,EAAG;MAAA9C,QAAA,EAAC;IAErG;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELnB,OAAA;MAAKI,SAAS,EAAE,iCAAiCkD,UAAU,GAAG,aAAa,GAAG,UAAU,EAAG;MAAA9C,QAAA,gBACvFR,OAAA;QAAII,SAAS,EAAE,2BAA2BkD,UAAU,GAAG,YAAY,GAAG,eAAe,EAAG;QAAA9C,QAAA,EAAC;MAEzF;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLnB,OAAA;QAAKI,SAAS,EAAC,0BAA0B;QAAAI,QAAA,eACrCR,OAAA;UACI+B,KAAK,EAAEiF,YAAa;UACpBqD,QAAQ,EAAElC,gBAAiB;UAC3B/H,SAAS,EAAEgK,WAAY;UAAA5J,QAAA,EAEtB8J,MAAM,CAACC,IAAI,CAACpH,iBAAiB,CAAC,CAACb,GAAG,CAACkI,IAAI,iBACpCxK,OAAA;YAAmB+B,KAAK,EAAEyI,IAAK;YAAAhK,QAAA,EAC1BgK;UAAI,GADIA,IAAI;YAAAxJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAET,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAENnB,OAAA;QAAOI,SAAS,EAAC,qCAAqC;QAAAI,QAAA,gBAClDR,OAAA;UAAOI,SAAS,EAAE,GAAGkD,UAAU,GAAG,aAAa,GAAG,YAAY,EAAG;UAAA9C,QAAA,eAC7DR,OAAA;YAAAQ,QAAA,gBACIR,OAAA;cAAIwG,KAAK,EAAC,KAAK;cAACpG,SAAS,EAAEgG,gBAAiB;cAAA5F,QAAA,EAAC;YAAO;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzDnB,OAAA;cAAIwG,KAAK,EAAC,KAAK;cAACpG,SAAS,EAAEgG,gBAAiB;cAAA5F,QAAA,EAAC;YAAY;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9DnB,OAAA;cAAIwG,KAAK,EAAC,KAAK;cAACpG,SAAS,EAAC,gFAAgF;cAAAI,QAAA,GAAC,gBAAc,EAACwG,YAAY;YAAA;cAAAhG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5I;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRnB,OAAA;UAAOI,SAAS,EAAC,0BAA0B;UAAAI,QAAA,EACtC8J,MAAM,CAACG,OAAO,CAAC3D,eAAe,CAAC,CAACxE,GAAG,CAAC,CAAC,CAACwF,GAAG,EAAE4C,IAAI,CAAC,kBAC7C1K,OAAA;YAAAQ,QAAA,gBACIR,OAAA;cAAII,SAAS,EAAEiG,cAAc,GAAG,yBAA0B;cAAA7F,QAAA,EAAEsH,GAAG,CAAC1F,OAAO,CAAC,UAAU,EAAE,KAAK;YAAC;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChGnB,OAAA;cAAII,SAAS,EAAE,GAAGiG,cAAc,IAAIxE,YAAY,CAACiG,GAAG,CAAC1F,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,EAAEsI,IAAI,CAAC3I,KAAK,EAAE2I,IAAI,CAAC1I,SAAS,CAAC,aAAc;cAAAxB,QAAA,GAErHsH,GAAG,KAAK,cAAc,gBACnB9H,OAAA;gBAAMI,SAAS,EAAC,WAAW;gBAAAI,QAAA,EAAEiC,UAAU,CAACiI,IAAI,CAAC3I,KAAK,GAAG,GAAG,CAAC,CAACW,OAAO,CAAC,CAAC;cAAC;gBAAA1B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,gBAE5EnB,OAAA;gBAAMI,SAAS,EAAC,WAAW;gBAAAI,QAAA,EAAEkK,IAAI,CAAC3I;cAAK;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CACjD,EAAE,GAAG,EACLuJ,IAAI,CAAC7H,IAAI;YAAA;cAAA7B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACLnB,OAAA;cAAII,SAAS,EAAEiG,cAAe;cAAA7F,QAAA,EACzBwG,YAAY,KAAK,QAAQ,gBACtBhH,OAAA;gBACIwI,IAAI,EAAC,MAAM;gBACXzG,KAAK,EAAE2F,mBAAmB,CAACI,GAAG,CAAE;gBAChCuC,QAAQ,EAAGM,CAAC,IAAKzC,0BAA0B,CAACJ,GAAG,EAAE6C,CAAC,CAACtC,MAAM,CAACtG,KAAK,CAAE;gBACjE3B,SAAS,EAAE+J,mBAAoB;gBAC/BS,WAAW,EAAC;cAA2B;gBAAA5J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CAAC,GAEFuJ,IAAI,CAAC1I;YACR;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA,GAvBA2G,GAAG;YAAA9G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAwBR,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAERnB,OAAA;QAAKI,SAAS,EAAC,MAAM;QAAAI,QAAA,gBACjBR,OAAA;UAAII,SAAS,EAAE,2BAA2BkD,UAAU,GAAG,YAAY,GAAG,eAAe,EAAG;UAAA9C,QAAA,EAAC;QAAmB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjHnB,OAAA;UAAKI,SAAS,EAAC,uCAAuC;UAAAI,QAAA,gBAClDR,OAAA;YAAKI,SAAS,EAAC,mBAAmB;YAAAI,QAAA,gBAC9BR,OAAA;cAAMI,SAAS,EAAC;YAAoC;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5DnB,OAAA;cAAMI,SAAS,EAAE,GAAGkD,UAAU,GAAG,eAAe,GAAG,eAAe,EAAG;cAAA9C,QAAA,EAAC;YAAkB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9F,CAAC,eACNnB,OAAA;YAAKI,SAAS,EAAC,mBAAmB;YAAAI,QAAA,gBAC9BR,OAAA;cAAMI,SAAS,EAAC;YAAsC;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9DnB,OAAA;cAAMI,SAAS,EAAE,GAAGkD,UAAU,GAAG,eAAe,GAAG,eAAe,EAAG;cAAA9C,QAAA,EAAC;YAAc;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1F,CAAC,eACNnB,OAAA;YAAKI,SAAS,EAAC,mBAAmB;YAAAI,QAAA,gBAC9BR,OAAA;cAAMI,SAAS,EAAC;YAAuC;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC/DnB,OAAA;cAAMI,SAAS,EAAE,GAAGkD,UAAU,GAAG,eAAe,GAAG,eAAe,EAAG;cAAA9C,QAAA,EAAC;YAAoB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENnB,OAAA;MAAKI,SAAS,EAAC,qDAAqD;MAAAI,QAAA,gBAChER,OAAA;QACI0D,OAAO,EAAEsG,8BAA+B;QACxC1D,QAAQ,EAAEgB,iBAAkB;QAC5BlH,SAAS,EAAE;AAC/B,sBAAsBkH,iBAAiB,GAAG,gCAAgC,GAAIhE,UAAU,GAAG,0CAA0C,GAAG,0CAA2C,EAAG;QAAA9C,QAAA,gBAElKR,OAAA,CAACjB,YAAY;UAACqB,SAAS,EAAC;QAAc;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACxCmG,iBAAiB,GAAG,eAAe,GAAG,6BAA6B;MAAA;QAAAtG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACTnB,OAAA;QACI0D,OAAO,EAAEuG,wBAAyB;QAClC3D,QAAQ,EAAEkB,qBAAsB;QAChCpH,SAAS,EAAE;AAC/B,sBAAsBoH,qBAAqB,GAAG,gCAAgC,GAAIlE,UAAU,GAAG,8CAA8C,GAAG,8CAA+C,EAAG;QAAA9C,QAAA,gBAE9KR,OAAA,CAAChB,KAAK;UAACoB,SAAS,EAAC;QAAc;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACjCqG,qBAAqB,GAAG,eAAe,GAAG,sBAAsB;MAAA;QAAAxG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAGL,CAAC+F,oBAAoB,IAAIE,cAAc,kBACpCpH,OAAA;MAAKI,SAAS,EAAC,0BAA0B;MAAAI,QAAA,eACrCR,OAAA;QACI0D,OAAO,EAAEwG,yBAA0B;QACnC9J,SAAS,EAAE;AACnC,0BAA0BkD,UAAU,GAAG,6CAA6C,GAAG,6CAA6C,EAAG;QAAA9C,QAAA,gBAE/GR,OAAA,CAACf,OAAO;UAACmB,SAAS,EAAC;QAAc;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,yBAExC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACR,EAGA,CAAC+F,oBAAoB,IAAIE,cAAc,kBACpCpH,OAAA;MAAKI,SAAS,EAAE,4BAA4BkD,UAAU,GAAG,aAAa,GAAG,UAAU,EAAG;MAAA9C,QAAA,GACjF0G,oBAAoB,iBACjBlH,OAAA,CAAAE,SAAA;QAAAM,QAAA,gBACIR,OAAA;UAAII,SAAS,EAAE,2BAA2BkD,UAAU,GAAG,YAAY,GAAG,eAAe,EAAG;UAAA9C,QAAA,EAAC;QAAwB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtHnB,OAAA;UAAKI,SAAS,EAAE,uBAAuBkD,UAAU,GAAG,aAAa,GAAG,aAAa,2BAA4B;UAAA9C,QAAA,EACxG0G;QAAoB;UAAAlG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA,eACR,CACL,EACAiG,cAAc,iBACXpH,OAAA,CAAAE,SAAA;QAAAM,QAAA,gBACIR,OAAA;UAAII,SAAS,EAAE,2BAA2BkD,UAAU,GAAG,YAAY,GAAG,eAAe,EAAG;UAAA9C,QAAA,EAAC;QAAiB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/GnB,OAAA;UAAKI,SAAS,EAAE,uBAAuBkD,UAAU,GAAG,aAAa,GAAG,aAAa,sBAAuB;UAAA9C,QAAA,EACnG4G;QAAc;UAAApG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA,eACR,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;;AAED;AAAA0F,GAAA,CAvSMD,UAAU;AAAAiE,GAAA,GAAVjE,UAAU;AAwShB,SAASkE,GAAGA,CAAA,EAAG;EAAAC,GAAA;EACX,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG5M,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAAC6M,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9M,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACiF,UAAU,EAAE8H,aAAa,CAAC,GAAG/M,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpD;EACA,MAAM,CAACgN,EAAE,EAAEC,KAAK,CAAC,GAAGjN,QAAQ,CAAC,IAAI,CAAC;EAClC,MAAM,CAACkN,IAAI,EAAEC,OAAO,CAAC,GAAGnN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACoN,MAAM,EAAEC,SAAS,CAAC,GAAGrN,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACsN,WAAW,EAAEC,cAAc,CAAC,GAAGvN,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAM,CAACwN,aAAa,EAAEC,gBAAgB,CAAC,GAAGzN,QAAQ,CAACsE,iBAAiB,CAAC;;EAErE;EACArE,SAAS,CAAC,MAAM;IACZ,MAAMyN,KAAK,GAAG,OAAOC,QAAQ,KAAK,WAAW,GAAGA,QAAQ,GAAG,mBAAmB;IAC9E,MAAMC,WAAW,GAAG,qDAAqD,CAAC,CAAC;;IAE3E,MAAMC,cAAc,GAAG;MACnBlD,MAAM,EAAE,yCAAyC;MACjDmD,UAAU,EAAE,iCAAiC;MAC7CF,WAAW,EAAEA,WAAW;MACxBG,SAAS,EAAE,iBAAiB;MAC5BC,aAAa,EAAE,6BAA6B;MAC5CC,iBAAiB,EAAE,cAAc;MACjCP,KAAK,EAAE,+CAA+C,CAAE;IAC5D,CAAC;IAED,MAAMQ,GAAG,GAAGjN,aAAa,CAAC4M,cAAc,CAAC;IACzC,MAAMM,UAAU,GAAG7M,WAAW,CAAC4M,GAAG,CAAC,CAAC,CAAC;IACrC,MAAME,YAAY,GAAGlN,OAAO,CAACgN,GAAG,CAAC;IAEjCjB,KAAK,CAACkB,UAAU,CAAC,CAAC,CAAC;IACnBhB,OAAO,CAACiB,YAAY,CAAC;IAErB,MAAMC,eAAe,GAAGhN,kBAAkB,CAAC+M,YAAY,EAAE,MAAOE,IAAI,IAAK;MACrE,IAAIA,IAAI,EAAE;QACNjB,SAAS,CAACiB,IAAI,CAACC,GAAG,CAAC;MACvB,CAAC,MAAM;QACH,IAAI;UACA,IAAI,OAAOC,oBAAoB,KAAK,WAAW,IAAIA,oBAAoB,EAAE;YACrE,MAAMpN,qBAAqB,CAACgN,YAAY,EAAEI,oBAAoB,CAAC;UACnE,CAAC,MAAM;YACH,MAAMrN,iBAAiB,CAACiN,YAAY,CAAC;UACzC;QACJ,CAAC,CAAC,OAAO1C,KAAK,EAAE;UACZD,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC9D;MACJ;MACA6B,cAAc,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC;IAEF,OAAO,MAAMc,eAAe,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACApO,SAAS,CAAC,MAAM;IACZ,IAAI,CAAC+M,EAAE,IAAI,CAACM,WAAW,EAAE;;IAEzB;IACA,MAAMmB,aAAa,GAAGlN,GAAG,CAACyL,EAAE,EAAE,WAAW,CAAC;IAE1C,MAAM0B,aAAa,GAAGlN,OAAO,CAACiN,aAAa,EAAGE,QAAQ,IAAK;MACvD,MAAMC,WAAW,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC;MACpC,IAAID,WAAW,EAAE;QACbnB,gBAAgB,CAAC/D,QAAQ,IAAI;UACzB,MAAMF,WAAW,GAAG;YAAE,GAAGE;UAAS,CAAC;UACnC;UACAF,WAAW,CAACjF,WAAW,CAACb,KAAK,GAAGU,UAAU,CAACwK,WAAW,CAACrK,WAAW,CAAC,IAAI,CAAC;UACxEiF,WAAW,CAAC/E,QAAQ,CAACf,KAAK,GAAGU,UAAU,CAACwK,WAAW,CAACnK,QAAQ,CAAC,IAAI,CAAC;UAClE+E,WAAW,CAAC9E,YAAY,CAAChB,KAAK,GAAGU,UAAU,CAACwK,WAAW,CAACE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;UACnEtF,WAAW,CAAC7E,QAAQ,CAACjB,KAAK,GAAGU,UAAU,CAACwK,WAAW,CAACG,KAAK,CAAC,IAAI,CAAC;UAC/DvF,WAAW,CAAC5E,UAAU,CAAClB,KAAK,GAAGU,UAAU,CAACwK,WAAW,CAACI,OAAO,CAAC,IAAI,CAAC;UACnExF,WAAW,CAAC3E,SAAS,CAACnB,KAAK,GAAGU,UAAU,CAACwK,WAAW,CAACK,KAAK,CAAC,IAAI,CAAC;UAChE,OAAOzF,WAAW;QACtB,CAAC,CAAC;MACN,CAAC,MAAM;QACHiC,OAAO,CAACyD,GAAG,CAAC,6FAA6F,CAAC;QAC1G;QACAzN,GAAG,CAACgN,aAAa,EAAE;UAAE;UACjBlK,WAAW,EAAED,iBAAiB,CAACC,WAAW,CAACb,KAAK;UAChDe,QAAQ,EAAEH,iBAAiB,CAACG,QAAQ,CAACf,KAAK;UAC1CoL,GAAG,EAAExK,iBAAiB,CAACI,YAAY,CAAChB,KAAK;UAAE;UAC3CqL,KAAK,EAAEzK,iBAAiB,CAACK,QAAQ,CAACjB,KAAK;UAAI;UAC3CsL,OAAO,EAAE1K,iBAAiB,CAACM,UAAU,CAAClB,KAAK;UAAE;UAC7CuL,KAAK,EAAE3K,iBAAiB,CAACO,SAAS,CAACnB,KAAK,CAAG;UAC3C;UACA;QACJ,CAAC,CAAC,CAACyL,KAAK,CAAC7C,CAAC,IAAIb,OAAO,CAACC,KAAK,CAAC,yDAAyD,EAAEY,CAAC,CAAC,CAAC;MAC9F;IACJ,CAAC,EAAGZ,KAAK,IAAK;MACVD,OAAO,CAACC,KAAK,CAAC,8DAA8D,EAAEA,KAAK,CAAC;IACxF,CAAC,CAAC;IAEF,OAAO,MAAMgD,aAAa,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,CAAC1B,EAAE,EAAEM,WAAW,CAAC,CAAC;EAGrB,MAAM8B,cAAc,GAAGA,CAACC,IAAI,EAAE7J,SAAS,GAAG,IAAI,KAAK;IAC/CoH,cAAc,CAACyC,IAAI,CAAC;IACpBvC,oBAAoB,CAACtH,SAAS,CAAC;EACnC,CAAC;EAED,MAAM8J,cAAc,GAAGA,CAAA,KAAM;IACzBvC,aAAa,CAAC,CAAC9H,UAAU,CAAC;EAC9B,CAAC;EAED,MAAMsK,iBAAiB,GAAG,0DACtBtK,UAAU,GAAG,wBAAwB,GAAG,0BAA0B,EACpE;EAEF,IAAI,CAACqI,WAAW,EAAE;IACd,oBACI3L,OAAA;MAAKI,SAAS,EAAC,sEAAsE;MAAAI,QAAA,EAAC;IAEtF;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEd;EAEA,oBACInB,OAAA;IAAKI,SAAS,EAAEwN,iBAAkB;IAAApN,QAAA,eAC9BR,OAAA;MAAKI,SAAS,EAAC,uBAAuB;MAAAI,QAAA,gBAClCR,OAAA;QAAKI,SAAS,EAAC,uBAAuB;QAAAI,QAAA,eAClCR,OAAA;UACI0D,OAAO,EAAEiK,cAAe;UACxBvN,SAAS,EAAE;AACnC,0BAA0BkD,UAAU,GAAG,+CAA+C,GAAG,iDAAiD,EAAG;UAAA9C,QAAA,EAEpH8C,UAAU,gBAAGtD,OAAA,CAACpB,GAAG;YAACwB,SAAS,EAAC;UAAS;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGnB,OAAA,CAACnB,IAAI;YAACuB,SAAS,EAAC;UAAS;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,EAEL6J,WAAW,KAAK,MAAM,iBACnBhL,OAAA,CAACoD,QAAQ;QAACC,UAAU,EAAEoK,cAAe;QAACnK,UAAU,EAAEA,UAAW;QAACC,UAAU,EAAEsI;MAAc;QAAA7K,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC7F,EACA6J,WAAW,KAAK,QAAQ,IAAIE,iBAAiB,iBAC1ClL,OAAA,CAAC4D,UAAU;QAACC,SAAS,EAAEqH,iBAAkB;QAAC7H,UAAU,EAAEoK,cAAe;QAACnK,UAAU,EAAEA;MAAW;QAAAtC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAClG,EACA6J,WAAW,KAAK,SAAS,iBACtBhL,OAAA,CAAC4G,UAAU;QAACvD,UAAU,EAAEoK,cAAe;QAACnK,UAAU,EAAEA,UAAW;QAACC,UAAU,EAAEsI;MAAc;QAAA7K,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC/F,EACA6J,WAAW,KAAK,cAAc,iBAC3BhL,OAAA,CAAC0E,oBAAoB;QAACrB,UAAU,EAAEoK,cAAe;QAACnK,UAAU,EAAEA,UAAW;QAACC,UAAU,EAAEsI;MAAc;QAAA7K,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACzG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC4J,GAAA,CApJQD,GAAG;AAAA+C,GAAA,GAAH/C,GAAG;AAsJZ,eAAeA,GAAG;AAAC,IAAAtJ,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAA+B,GAAA,EAAAc,GAAA,EAAAkC,GAAA,EAAAkE,GAAA,EAAAgD,GAAA;AAAAC,YAAA,CAAAtM,EAAA;AAAAsM,YAAA,CAAApM,GAAA;AAAAoM,YAAA,CAAAlM,GAAA;AAAAkM,YAAA,CAAAnK,GAAA;AAAAmK,YAAA,CAAArJ,GAAA;AAAAqJ,YAAA,CAAAnH,GAAA;AAAAmH,YAAA,CAAAjD,GAAA;AAAAiD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}